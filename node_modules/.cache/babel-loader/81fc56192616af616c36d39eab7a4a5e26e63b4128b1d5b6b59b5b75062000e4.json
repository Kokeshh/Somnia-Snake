{"ast":null,"code":"var _jsxFileName = \"/Users/kokesh/snakes Somnia/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport BetPanel from './components/BetPanel.tsx';\nimport GameBoard from './components/GameBoard.tsx';\nimport Leaderboard from './components/Leaderboard.tsx';\nimport { generateBoard, generatePath } from './utils/gameLogic.ts';\nimport { connectWallet, placeBet, cashout } from './utils/contract.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nconst App = () => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [nickname, setNickname] = useState('');\n  const [bet, setBet] = useState('');\n  const [difficulty, setDifficulty] = useState('easy');\n  const [step, setStep] = useState(0); // сколько бросков\n  const [board, setBoard] = useState(null);\n  const [path, setPath] = useState(null);\n  const [position, setPosition] = useState(0); // индекс в path\n  const [profit, setProfit] = useState(0);\n  const [gameActive, setGameActive] = useState(false);\n  const [lost, setLost] = useState(false);\n  const [rolling, setRolling] = useState(false);\n  const [dice, setDice] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [txStatus, setTxStatus] = useState(null);\n  const [cashoutPending, setCashoutPending] = useState(false);\n  const handleConnect = async () => {\n    try {\n      const {\n        provider,\n        signer\n      } = await connectWallet();\n      const address = await signer.getAddress();\n      setSigner(signer);\n      setProvider(provider);\n      setAccount(address);\n      setIsConnected(true);\n    } catch (e) {\n      setTxStatus('Ошибка подключения к MetaMask');\n    }\n  };\n  const handleBet = async ({\n    nickname,\n    amount,\n    difficulty\n  }) => {\n    setNickname(nickname);\n    setBet(amount);\n    setDifficulty(difficulty);\n    setTxStatus('Отправка транзакции...');\n    try {\n      await placeBet(signer, nickname, amount);\n      setTxStatus('Ставка принята!');\n      const b = generateBoard(difficulty);\n      const p = generatePath();\n      setBoard(b);\n      setPath(p);\n      setPosition(0);\n      setStep(0);\n      setProfit(0);\n      setGameActive(true);\n      setLost(false);\n      setDice(null);\n      setMessage(null);\n    } catch (e) {\n      setTxStatus('Ошибка транзакции');\n    }\n  };\n\n  // Анимация движения по маршруту\n  const animateMove = async (from, to, path, board) => {\n    let lose = false;\n    let newProfit = profit;\n    let msg = '';\n    for (let pos = from + 1; pos <= to; pos++) {\n      setPosition(pos);\n      await new Promise(res => setTimeout(res, 180));\n      const {\n        x,\n        y\n      } = path[pos];\n      const cell = board[y][x];\n      if (cell.type === 'snake') {\n        lose = true;\n        msg = 'Вы попали на змею! Ставка проиграна.';\n        setLost(true);\n        setGameActive(false);\n        setProfit(0);\n        setMessage(msg);\n        break;\n      }\n      if (cell.type === 'mult') {\n        const mult = parseFloat(cell.value.replace('x', ''));\n        newProfit = newProfit === 0 ? Number(bet) * mult : newProfit * mult;\n      }\n    }\n    if (!lose) {\n      setProfit(newProfit);\n      setMessage('');\n    }\n    return {\n      lose,\n      newProfit,\n      msg\n    };\n  };\n  const handleRoll = async () => {\n    if (!gameActive || !path || !board || rolling) return;\n    setRolling(true);\n    // Анимация броска кубика\n    let final = getRandomInt(1, 6);\n    for (let i = 0; i < 10; i++) {\n      setDice(getRandomInt(1, 6));\n      await new Promise(res => setTimeout(res, 60));\n    }\n    setDice(final);\n    // Анимация движения по маршруту\n    let nextPos = Math.min(position + final, path.length - 1);\n    const {\n      lose,\n      newProfit,\n      msg\n    } = await animateMove(position, nextPos, path, board);\n    setStep(s => s + 1);\n    setLost(lose);\n    setGameActive(!lose && step + 1 < 5);\n    setMessage(lose ? msg : step + 1 >= 5 ? `Раунд завершён! Ваш выигрыш: ${newProfit.toFixed(4)} STT` : `Выпало: ${final}`);\n    setRolling(false);\n  };\n  const handleCashout = async () => {\n    setGameActive(false);\n    setTxStatus('Выплата...');\n    setCashoutPending(true);\n    try {\n      const tx = await cashout(signer, profit.toString());\n      setTxStatus('Ожидание подтверждения транзакции...');\n      await tx.wait(); // дождаться mined\n      setTxStatus('Выплата успешно отправлена!');\n      setMessage(`Вы забрали: ${profit.toFixed(4)} STT`);\n    } catch (e) {\n      setTxStatus('Ошибка выплаты: ' + ((e === null || e === void 0 ? void 0 : e.reason) || (e === null || e === void 0 ? void 0 : e.message) || ''));\n    } finally {\n      setCashoutPending(false);\n    }\n  };\n  const handleRestart = () => {\n    setBoard(null);\n    setPath(null);\n    setPosition(0);\n    setStep(0);\n    setProfit(0);\n    setGameActive(false);\n    setLost(false);\n    setDice(null);\n    setMessage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-[#1a232b] flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-8 w-full max-w-5xl p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(BetPanel, {\n          onConnect: handleConnect,\n          onBet: handleBet,\n          isConnected: isConnected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Leaderboard, {\n          provider: provider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex flex-col items-center justify-center\",\n        children: [account && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 text-xs text-gray-400\",\n          children: account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 23\n        }, this), txStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 text-sm text-yellow-300\",\n          children: txStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(GameBoard, {\n          step: step,\n          board: board,\n          path: path,\n          position: position,\n          lost: lost,\n          dice: dice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), gameActive && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4 mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-6 rounded\",\n            onClick: handleRoll,\n            disabled: step >= 5 || lost || rolling,\n            children: rolling ? 'Rolling...' : 'Roll'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-6 rounded\",\n            onClick: handleCashout,\n            disabled: step === 0 || lost || rolling || cashoutPending,\n            children: \"Cashout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mt-4 text-lg font-bold ${lost ? 'text-red-400' : 'text-green-300'}`,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), !gameActive && (step > 0 || lost) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mt-6 bg-gray-700 hover:bg-gray-600 text-white font-bold py-2 px-6 rounded\",\n          onClick: handleRestart,\n          children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"PHspgzpJqbazKtRedXhFZP41ckY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BetPanel","GameBoard","Leaderboard","generateBoard","generatePath","connectWallet","placeBet","cashout","jsxDEV","_jsxDEV","getRandomInt","min","max","Math","floor","random","App","_s","isConnected","setIsConnected","nickname","setNickname","bet","setBet","difficulty","setDifficulty","step","setStep","board","setBoard","path","setPath","position","setPosition","profit","setProfit","gameActive","setGameActive","lost","setLost","rolling","setRolling","dice","setDice","message","setMessage","account","setAccount","signer","setSigner","provider","setProvider","txStatus","setTxStatus","cashoutPending","setCashoutPending","handleConnect","address","getAddress","e","handleBet","amount","b","p","animateMove","from","to","lose","newProfit","msg","pos","Promise","res","setTimeout","x","y","cell","type","mult","parseFloat","value","replace","Number","handleRoll","final","i","nextPos","length","s","toFixed","handleCashout","tx","toString","wait","reason","handleRestart","className","children","onConnect","onBet","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/kokesh/snakes Somnia/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport BetPanel from './components/BetPanel.tsx';\nimport GameBoard from './components/GameBoard.tsx';\nimport Leaderboard from './components/Leaderboard.tsx';\nimport { generateBoard, generatePath, BoardCell } from './utils/gameLogic.ts';\nimport { connectWallet, placeBet, cashout } from './utils/contract.ts';\n\nfunction getRandomInt(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst App = () => {\n  const [isConnected, setIsConnected] = useState(false);\n  const [nickname, setNickname] = useState('');\n  const [bet, setBet] = useState('');\n  const [difficulty, setDifficulty] = useState<'easy'|'medium'|'hard'|'expert'|'master'>('easy');\n  const [step, setStep] = useState(0); // сколько бросков\n  const [board, setBoard] = useState<BoardCell[][] | null>(null);\n  const [path, setPath] = useState<{x:number, y:number}[] | null>(null);\n  const [position, setPosition] = useState(0); // индекс в path\n  const [profit, setProfit] = useState(0);\n  const [gameActive, setGameActive] = useState(false);\n  const [lost, setLost] = useState(false);\n  const [rolling, setRolling] = useState(false);\n  const [dice, setDice] = useState<number | null>(null);\n  const [message, setMessage] = useState<string | null>(null);\n  const [account, setAccount] = useState<string | null>(null);\n  const [signer, setSigner] = useState<any>(null);\n  const [provider, setProvider] = useState<any>(null);\n  const [txStatus, setTxStatus] = useState<string | null>(null);\n  const [cashoutPending, setCashoutPending] = useState(false);\n\n  const handleConnect = async () => {\n    try {\n      const { provider, signer } = await connectWallet();\n      const address = await signer.getAddress();\n      setSigner(signer);\n      setProvider(provider);\n      setAccount(address);\n      setIsConnected(true);\n    } catch (e) {\n      setTxStatus('Ошибка подключения к MetaMask');\n    }\n  };\n\n  const handleBet = async ({ nickname, amount, difficulty }: any) => {\n    setNickname(nickname);\n    setBet(amount);\n    setDifficulty(difficulty);\n    setTxStatus('Отправка транзакции...');\n    try {\n      await placeBet(signer, nickname, amount);\n      setTxStatus('Ставка принята!');\n      const b = generateBoard(difficulty);\n      const p = generatePath();\n      setBoard(b);\n      setPath(p);\n      setPosition(0);\n      setStep(0);\n      setProfit(0);\n      setGameActive(true);\n      setLost(false);\n      setDice(null);\n      setMessage(null);\n    } catch (e) {\n      setTxStatus('Ошибка транзакции');\n    }\n  };\n\n  // Анимация движения по маршруту\n  const animateMove = async (from: number, to: number, path: {x:number, y:number}[], board: BoardCell[][]) => {\n    let lose = false;\n    let newProfit = profit;\n    let msg = '';\n    for (let pos = from + 1; pos <= to; pos++) {\n      setPosition(pos);\n      await new Promise(res => setTimeout(res, 180));\n      const { x, y } = path[pos];\n      const cell = board[y][x];\n      if (cell.type === 'snake') {\n        lose = true;\n        msg = 'Вы попали на змею! Ставка проиграна.';\n        setLost(true);\n        setGameActive(false);\n        setProfit(0);\n        setMessage(msg);\n        break;\n      }\n      if (cell.type === 'mult') {\n        const mult = parseFloat(cell.value.replace('x', ''));\n        newProfit = newProfit === 0 ? Number(bet) * mult : newProfit * mult;\n      }\n    }\n    if (!lose) {\n      setProfit(newProfit);\n      setMessage('');\n    }\n    return { lose, newProfit, msg };\n  };\n\n  const handleRoll = async () => {\n    if (!gameActive || !path || !board || rolling) return;\n    setRolling(true);\n    // Анимация броска кубика\n    let final = getRandomInt(1, 6);\n    for (let i = 0; i < 10; i++) {\n      setDice(getRandomInt(1, 6));\n      await new Promise(res => setTimeout(res, 60));\n    }\n    setDice(final);\n    // Анимация движения по маршруту\n    let nextPos = Math.min(position + final, path.length - 1);\n    const { lose, newProfit, msg } = await animateMove(position, nextPos, path, board);\n    setStep(s => s + 1);\n    setLost(lose);\n    setGameActive(!lose && step + 1 < 5);\n    setMessage(lose ? msg : (step + 1 >= 5 ? `Раунд завершён! Ваш выигрыш: ${newProfit.toFixed(4)} STT` : `Выпало: ${final}`));\n    setRolling(false);\n  };\n\n  const handleCashout = async () => {\n    setGameActive(false);\n    setTxStatus('Выплата...');\n    setCashoutPending(true);\n    try {\n      const tx = await cashout(signer, profit.toString());\n      setTxStatus('Ожидание подтверждения транзакции...');\n      await tx.wait(); // дождаться mined\n      setTxStatus('Выплата успешно отправлена!');\n      setMessage(`Вы забрали: ${profit.toFixed(4)} STT`);\n    } catch (e: any) {\n      setTxStatus('Ошибка выплаты: ' + (e?.reason || e?.message || ''));\n    } finally {\n      setCashoutPending(false);\n    }\n  };\n\n  const handleRestart = () => {\n    setBoard(null);\n    setPath(null);\n    setPosition(0);\n    setStep(0);\n    setProfit(0);\n    setGameActive(false);\n    setLost(false);\n    setDice(null);\n    setMessage(null);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-[#1a232b] flex items-center justify-center\">\n      <div className=\"flex gap-8 w-full max-w-5xl p-8\">\n        <div className=\"flex flex-col gap-6\">\n          <BetPanel\n            onConnect={handleConnect}\n            onBet={handleBet}\n            isConnected={isConnected}\n          />\n          <Leaderboard provider={provider} />\n        </div>\n        <div className=\"flex-1 flex flex-col items-center justify-center\">\n          {account && <div className=\"mb-2 text-xs text-gray-400\">{account}</div>}\n          {txStatus && <div className=\"mb-2 text-sm text-yellow-300\">{txStatus}</div>}\n          <GameBoard\n            step={step}\n            board={board}\n            path={path}\n            position={position}\n            lost={lost}\n            dice={dice}\n          />\n          {gameActive && (\n            <div className=\"flex gap-4 mt-6\">\n              <button\n                className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-6 rounded\"\n                onClick={handleRoll}\n                disabled={step >= 5 || lost || rolling}\n              >\n                {rolling ? 'Rolling...' : 'Roll'}\n              </button>\n              <button\n                className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-6 rounded\"\n                onClick={handleCashout}\n                disabled={step === 0 || lost || rolling || cashoutPending}\n              >\n                Cashout\n              </button>\n            </div>\n          )}\n          {message && (\n            <div className={`mt-4 text-lg font-bold ${lost ? 'text-red-400' : 'text-green-300'}`}>{message}</div>\n          )}\n          {!gameActive && (step > 0 || lost) && (\n            <button\n              className=\"mt-6 bg-gray-700 hover:bg-gray-600 text-white font-bold py-2 px-6 rounded\"\n              onClick={handleRestart}\n            >\n              Начать заново\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}