{"ast":null,"code":"var _jsxFileName = \"/Users/kokesh/snakes Somnia/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport BetPanel from './components/BetPanel.tsx';\nimport GameBoard from './components/GameBoard.tsx';\nimport Leaderboard from './components/Leaderboard.tsx';\nimport { generateBoard, generatePath } from './utils/gameLogic.ts';\nimport { connectWallet, placeBet, cashout } from './utils/contract.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nfunction toFixed18(val) {\n  return Number(val).toFixed(18).replace(/0+$/, '').replace(/\\.$/, '');\n}\nconst App = () => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [nickname, setNickname] = useState('');\n  const [bet, setBet] = useState('');\n  const [difficulty, setDifficulty] = useState('easy');\n  const [step, setStep] = useState(0); // сколько бросков\n  const [board, setBoard] = useState(null);\n  const [path, setPath] = useState(null);\n  const [position, setPosition] = useState(0); // индекс в path\n  const [profit, setProfit] = useState(0);\n  const [gameActive, setGameActive] = useState(false);\n  const [lost, setLost] = useState(false);\n  const [rolling, setRolling] = useState(false);\n  const [dice1, setDice1] = useState(null);\n  const [dice2, setDice2] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [txStatus, setTxStatus] = useState(null);\n  const [cashoutPending, setCashoutPending] = useState(false);\n  const [canBet, setCanBet] = useState(true); // Можно ли делать ставку\n\n  const handleConnect = async () => {\n    try {\n      const {\n        provider,\n        signer\n      } = await connectWallet();\n      const address = await signer.getAddress();\n      setSigner(signer);\n      setProvider(provider);\n      setAccount(address);\n      setIsConnected(true);\n    } catch (e) {\n      setTxStatus('Ошибка подключения к MetaMask');\n    }\n  };\n  const handleBet = async ({\n    nickname,\n    amount,\n    difficulty\n  }) => {\n    setNickname(nickname);\n    setBet(amount);\n    setDifficulty(difficulty);\n    setTxStatus('Отправка транзакции...');\n    try {\n      await placeBet(signer, nickname, amount);\n      setTxStatus('Ставка принята!');\n      const b = generateBoard(difficulty);\n      const p = generatePath();\n      setBoard(b);\n      setPath(p);\n      setPosition(0);\n      setStep(0);\n      setProfit(0);\n      setGameActive(true);\n      setLost(false);\n      setDice1(null);\n      setDice2(null);\n      setMessage(null);\n      setCanBet(false); // После ставки нельзя делать новую, пока не закончится раунд\n    } catch (e) {\n      setTxStatus('Ошибка транзакции');\n    }\n  };\n\n  // Анимация движения по маршруту\n  const animateMove = async (from, to, path, board) => {\n    let lose = false;\n    let newProfit = profit;\n    let msg = '';\n    for (let pos = from + 1; pos <= to; pos++) {\n      setPosition(pos);\n      await new Promise(res => setTimeout(res, 180));\n      const {\n        x,\n        y\n      } = path[pos];\n      const cell = board[y][x];\n      if (cell.type === 'snake') {\n        lose = true;\n        msg = 'Вы попали на змею! Ставка проиграна.';\n        setLost(true);\n        setGameActive(false);\n        setProfit(0);\n        setMessage(msg);\n        break;\n      }\n      if (cell.type === 'mult') {\n        const mult = parseFloat(cell.value.replace('x', ''));\n        newProfit = newProfit === 0 ? Number(bet) * mult : newProfit * mult;\n      }\n    }\n    if (!lose) {\n      setProfit(newProfit);\n      setMessage('');\n    }\n    return {\n      lose,\n      newProfit,\n      msg\n    };\n  };\n  const handleRoll = async () => {\n    if (!gameActive || !path || !board || rolling) return;\n    setRolling(true);\n    // Анимация броска двух кубиков\n    let final1 = getRandomInt(1, 6);\n    let final2 = getRandomInt(1, 6);\n    for (let i = 0; i < 10; i++) {\n      setDice1(getRandomInt(1, 6));\n      setDice2(getRandomInt(1, 6));\n      await new Promise(res => setTimeout(res, 60));\n    }\n    setDice1(final1);\n    setDice2(final2);\n    // Суммируем значения кубиков\n    let move = final1 + final2;\n    // Анимация движения по маршруту\n    let nextPos = Math.min(position + move, path.length - 1);\n    const {\n      lose,\n      newProfit,\n      msg\n    } = await animateMove(position, nextPos, path, board);\n    setStep(s => s + 1);\n    setLost(lose);\n    setGameActive(!lose && step + 1 < 5);\n    setMessage(lose ? msg : step + 1 >= 5 ? `Раунд завершён! Ваш выигрыш: ${newProfit.toFixed(4)} STT` : `Выпало: ${final1} + ${final2} = ${move}`);\n    setRolling(false);\n  };\n  const handleCashout = async () => {\n    setGameActive(false);\n    setTxStatus('Выплата...');\n    setCashoutPending(true);\n    try {\n      const roundedProfit = Number(profit).toFixed(8); // <= исправление!\n      const tx = await cashout(signer, roundedProfit);\n      setTxStatus('Ожидание подтверждения транзакции...');\n      await tx.wait();\n      setTxStatus('Выплата успешно отправлена!');\n      setMessage(`Вы забрали: ${roundedProfit} STT. Сделайте новую ставку, чтобы продолжить игру.`);\n      setCanBet(true);\n    } catch (e) {\n      setTxStatus('Ошибка выплаты: ' + ((e === null || e === void 0 ? void 0 : e.reason) || (e === null || e === void 0 ? void 0 : e.message) || ''));\n    } finally {\n      setCashoutPending(false);\n    }\n  };\n  const handleRestart = () => {\n    setBoard(null);\n    setPath(null);\n    setPosition(0);\n    setStep(0);\n    setProfit(0);\n    setGameActive(false);\n    setLost(false);\n    setDice1(null);\n    setDice2(null);\n    setMessage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-[#1a232b] flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-8 w-full max-w-5xl p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(BetPanel, {\n          onConnect: handleConnect,\n          onBet: handleBet,\n          isConnected: isConnected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Leaderboard, {\n          provider: provider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex flex-col items-center justify-center\",\n        children: [account && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 text-xs text-gray-400\",\n          children: account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 23\n        }, this), txStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 text-sm text-yellow-300\",\n          children: txStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(GameBoard, {\n          step: step,\n          board: board,\n          path: path,\n          position: position,\n          lost: lost,\n          dice1: dice1,\n          dice2: dice2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), gameActive && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4 mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-6 rounded\",\n            onClick: handleRoll,\n            disabled: step >= 5 || lost || rolling,\n            children: rolling ? 'Rolling...' : 'Roll'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-6 rounded\",\n            onClick: handleCashout,\n            disabled: step === 0 || lost || rolling || cashoutPending || canBet,\n            children: \"Cashout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mt-4 text-lg font-bold ${lost ? 'text-red-400' : 'text-green-300'}`,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), !gameActive && (step > 0 || lost) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mt-6 bg-gray-700 hover:bg-gray-600 text-white font-bold py-2 px-6 rounded\",\n          onClick: handleRestart,\n          children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"/ALjjZ4oSZb66ZuDGvr71PcLjao=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BetPanel","GameBoard","Leaderboard","generateBoard","generatePath","connectWallet","placeBet","cashout","jsxDEV","_jsxDEV","getRandomInt","min","max","Math","floor","random","toFixed18","val","Number","toFixed","replace","App","_s","isConnected","setIsConnected","nickname","setNickname","bet","setBet","difficulty","setDifficulty","step","setStep","board","setBoard","path","setPath","position","setPosition","profit","setProfit","gameActive","setGameActive","lost","setLost","rolling","setRolling","dice1","setDice1","dice2","setDice2","message","setMessage","account","setAccount","signer","setSigner","provider","setProvider","txStatus","setTxStatus","cashoutPending","setCashoutPending","canBet","setCanBet","handleConnect","address","getAddress","e","handleBet","amount","b","p","animateMove","from","to","lose","newProfit","msg","pos","Promise","res","setTimeout","x","y","cell","type","mult","parseFloat","value","handleRoll","final1","final2","i","move","nextPos","length","s","handleCashout","roundedProfit","tx","wait","reason","handleRestart","className","children","onConnect","onBet","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/kokesh/snakes Somnia/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport BetPanel from './components/BetPanel.tsx';\nimport GameBoard from './components/GameBoard.tsx';\nimport Leaderboard from './components/Leaderboard.tsx';\nimport { generateBoard, generatePath, BoardCell } from './utils/gameLogic.ts';\nimport { connectWallet, placeBet, cashout } from './utils/contract.ts';\n\nfunction getRandomInt(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction toFixed18(val: number | string) {\n  return Number(val).toFixed(18).replace(/0+$/, '').replace(/\\.$/, '');\n}\n\nconst App = () => {\n  const [isConnected, setIsConnected] = useState(false);\n  const [nickname, setNickname] = useState('');\n  const [bet, setBet] = useState('');\n  const [difficulty, setDifficulty] = useState<'easy'|'medium'|'hard'|'expert'|'master'>('easy');\n  const [step, setStep] = useState(0); // сколько бросков\n  const [board, setBoard] = useState<BoardCell[][] | null>(null);\n  const [path, setPath] = useState<{x:number, y:number}[] | null>(null);\n  const [position, setPosition] = useState(0); // индекс в path\n  const [profit, setProfit] = useState(0);\n  const [gameActive, setGameActive] = useState(false);\n  const [lost, setLost] = useState(false);\n  const [rolling, setRolling] = useState(false);\n  const [dice1, setDice1] = useState<number | null>(null);\n  const [dice2, setDice2] = useState<number | null>(null);\n  const [message, setMessage] = useState<string | null>(null);\n  const [account, setAccount] = useState<string | null>(null);\n  const [signer, setSigner] = useState<any>(null);\n  const [provider, setProvider] = useState<any>(null);\n  const [txStatus, setTxStatus] = useState<string | null>(null);\n  const [cashoutPending, setCashoutPending] = useState(false);\n  const [canBet, setCanBet] = useState(true); // Можно ли делать ставку\n\n  const handleConnect = async () => {\n    try {\n      const { provider, signer } = await connectWallet();\n      const address = await signer.getAddress();\n      setSigner(signer);\n      setProvider(provider);\n      setAccount(address);\n      setIsConnected(true);\n    } catch (e) {\n      setTxStatus('Ошибка подключения к MetaMask');\n    }\n  };\n\n  const handleBet = async ({ nickname, amount, difficulty }: any) => {\n    setNickname(nickname);\n    setBet(amount);\n    setDifficulty(difficulty);\n    setTxStatus('Отправка транзакции...');\n    try {\n      await placeBet(signer, nickname, amount);\n      setTxStatus('Ставка принята!');\n      const b = generateBoard(difficulty);\n      const p = generatePath();\n      setBoard(b);\n      setPath(p);\n      setPosition(0);\n      setStep(0);\n      setProfit(0);\n      setGameActive(true);\n      setLost(false);\n      setDice1(null);\n      setDice2(null);\n      setMessage(null);\n      setCanBet(false); // После ставки нельзя делать новую, пока не закончится раунд\n    } catch (e) {\n      setTxStatus('Ошибка транзакции');\n    }\n  };\n\n  // Анимация движения по маршруту\n  const animateMove = async (from: number, to: number, path: {x:number, y:number}[], board: BoardCell[][]) => {\n    let lose = false;\n    let newProfit = profit;\n    let msg = '';\n    for (let pos = from + 1; pos <= to; pos++) {\n      setPosition(pos);\n      await new Promise(res => setTimeout(res, 180));\n      const { x, y } = path[pos];\n      const cell = board[y][x];\n      if (cell.type === 'snake') {\n        lose = true;\n        msg = 'Вы попали на змею! Ставка проиграна.';\n        setLost(true);\n        setGameActive(false);\n        setProfit(0);\n        setMessage(msg);\n        break;\n      }\n      if (cell.type === 'mult') {\n        const mult = parseFloat(cell.value.replace('x', ''));\n        newProfit = newProfit === 0 ? Number(bet) * mult : newProfit * mult;\n      }\n    }\n    if (!lose) {\n      setProfit(newProfit);\n      setMessage('');\n    }\n    return { lose, newProfit, msg };\n  };\n\n  const handleRoll = async () => {\n    if (!gameActive || !path || !board || rolling) return;\n    setRolling(true);\n    // Анимация броска двух кубиков\n    let final1 = getRandomInt(1, 6);\n    let final2 = getRandomInt(1, 6);\n    for (let i = 0; i < 10; i++) {\n      setDice1(getRandomInt(1, 6));\n      setDice2(getRandomInt(1, 6));\n      await new Promise(res => setTimeout(res, 60));\n    }\n    setDice1(final1);\n    setDice2(final2);\n    // Суммируем значения кубиков\n    let move = final1 + final2;\n    // Анимация движения по маршруту\n    let nextPos = Math.min(position + move, path.length - 1);\n    const { lose, newProfit, msg } = await animateMove(position, nextPos, path, board);\n    setStep(s => s + 1);\n    setLost(lose);\n    setGameActive(!lose && step + 1 < 5);\n    setMessage(lose ? msg : (step + 1 >= 5 ? `Раунд завершён! Ваш выигрыш: ${newProfit.toFixed(4)} STT` : `Выпало: ${final1} + ${final2} = ${move}`));\n    setRolling(false);\n  };\n\n  const handleCashout = async () => {\n    setGameActive(false);\n    setTxStatus('Выплата...');\n    setCashoutPending(true);\n    try {\n      const roundedProfit = Number(profit).toFixed(8); // <= исправление!\n      const tx = await cashout(signer, roundedProfit);\n      setTxStatus('Ожидание подтверждения транзакции...');\n      await tx.wait();\n      setTxStatus('Выплата успешно отправлена!');\n      setMessage(`Вы забрали: ${roundedProfit} STT. Сделайте новую ставку, чтобы продолжить игру.`);\n      setCanBet(true);\n    } catch (e: any) {\n      setTxStatus('Ошибка выплаты: ' + (e?.reason || e?.message || ''));\n    } finally {\n      setCashoutPending(false);\n    }\n  };\n\n  const handleRestart = () => {\n    setBoard(null);\n    setPath(null);\n    setPosition(0);\n    setStep(0);\n    setProfit(0);\n    setGameActive(false);\n    setLost(false);\n    setDice1(null);\n    setDice2(null);\n    setMessage(null);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-[#1a232b] flex items-center justify-center\">\n      <div className=\"flex gap-8 w-full max-w-5xl p-8\">\n        <div className=\"flex flex-col gap-6\">\n          <BetPanel\n            onConnect={handleConnect}\n            onBet={handleBet}\n            isConnected={isConnected}\n          />\n          <Leaderboard provider={provider} />\n        </div>\n        <div className=\"flex-1 flex flex-col items-center justify-center\">\n          {account && <div className=\"mb-2 text-xs text-gray-400\">{account}</div>}\n          {txStatus && <div className=\"mb-2 text-sm text-yellow-300\">{txStatus}</div>}\n          <GameBoard\n            step={step}\n            board={board}\n            path={path}\n            position={position}\n            lost={lost}\n            dice1={dice1}\n            dice2={dice2}\n          />\n          {gameActive && (\n            <div className=\"flex gap-4 mt-6\">\n              <button\n                className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-6 rounded\"\n                onClick={handleRoll}\n                disabled={step >= 5 || lost || rolling}\n              >\n                {rolling ? 'Rolling...' : 'Roll'}\n              </button>\n              <button\n                className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-6 rounded\"\n                onClick={handleCashout}\n                disabled={step === 0 || lost || rolling || cashoutPending || canBet}\n              >\n                Cashout\n              </button>\n            </div>\n          )}\n          {message && (\n            <div className={`mt-4 text-lg font-bold ${lost ? 'text-red-400' : 'text-green-300'}`}>{message}</div>\n          )}\n          {!gameActive && (step > 0 || lost) && (\n            <button\n              className=\"mt-6 bg-gray-700 hover:bg-gray-600 text-white font-bold py-2 px-6 rounded\"\n              onClick={handleRestart}\n            >\n              Начать заново\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}