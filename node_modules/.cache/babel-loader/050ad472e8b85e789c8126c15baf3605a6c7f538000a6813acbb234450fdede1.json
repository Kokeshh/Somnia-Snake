{"ast":null,"code":"import { ethers } from 'ethers';\n\n// TODO: замените на реальный адрес после деплоя\nexport const CONTRACT_ADDRESS = '0x0737c42003b43765ba2a802d4e3C5Ee961D2d865';\nexport const CONTRACT_ABI = [{\n  \"inputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"constructor\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"player\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"string\",\n    \"name\": \"nickname\",\n    \"type\": \"string\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"amount\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"BetPlaced\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"player\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"BetReset\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"player\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"profit\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"CashedOut\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"amount\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"Withdrawn\",\n  \"type\": \"event\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"bets\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"amount\",\n    \"type\": \"uint256\"\n  }, {\n    \"internalType\": \"address\",\n    \"name\": \"player\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"string\",\n    \"name\": \"nickname\",\n    \"type\": \"string\"\n  }, {\n    \"internalType\": \"bool\",\n    \"name\": \"active\",\n    \"type\": \"bool\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"profit\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"cashout\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"newNickname\",\n    \"type\": \"string\"\n  }],\n  \"name\": \"changeNickname\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"getContractBalance\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"getLeaderboard\",\n  \"outputs\": [{\n    \"components\": [{\n      \"internalType\": \"address\",\n      \"name\": \"addr\",\n      \"type\": \"address\"\n    }, {\n      \"internalType\": \"string\",\n      \"name\": \"nickname\",\n      \"type\": \"string\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"totalWinnings\",\n      \"type\": \"uint256\"\n    }],\n    \"internalType\": \"struct SnakesGame.Player[]\",\n    \"name\": \"\",\n    \"type\": \"tuple[]\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"leaderboard\",\n  \"outputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"addr\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"string\",\n    \"name\": \"nickname\",\n    \"type\": \"string\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"totalWinnings\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"nicknames\",\n  \"outputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"\",\n    \"type\": \"string\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"owner\",\n  \"outputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"nickname\",\n    \"type\": \"string\"\n  }],\n  \"name\": \"placeBet\",\n  \"outputs\": [],\n  \"stateMutability\": \"payable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"resetBet\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"newOwner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"transferOwnership\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"amount\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"withdraw\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}];\nexport async function connectWallet() {\n  if (!window.ethereum) throw new Error('MetaMask not found');\n  await window.ethereum.request({\n    method: 'eth_requestAccounts'\n  });\n  const provider = new ethers.BrowserProvider(window.ethereum);\n  const signer = await provider.getSigner();\n  return {\n    provider,\n    signer\n  };\n}\nexport function getContract(signerOrProvider) {\n  return new ethers.Contract(CONTRACT_ADDRESS, CONTRACT_ABI, signerOrProvider);\n}\nexport async function placeBet(signer, nickname, amount) {\n  const contract = getContract(signer);\n  const tx = await contract.placeBet(nickname, {\n    value: ethers.parseEther(amount)\n  });\n  return tx;\n}\nexport async function cashout(signer, profit) {\n  const contract = getContract(signer);\n  const tx = await contract.cashout(ethers.parseEther(profit));\n  return tx;\n}\nexport async function resetBet(signer) {\n  const contract = getContract(signer);\n  const tx = await contract.resetBet();\n  return tx;\n}\nexport async function getLeaderboard(provider) {\n  const contract = getContract(provider);\n  const leaderboard = await contract.getLeaderboard();\n\n  // Преобразуем данные из контракта в удобный формат\n  return leaderboard.map(player => ({\n    addr: player.addr,\n    nickname: player.nickname,\n    totalWinnings: ethers.formatEther(player.totalWinnings)\n  }));\n}\nexport async function getContractBalance(provider) {\n  const contract = getContract(provider);\n  const balance = await contract.getContractBalance();\n  return ethers.formatEther(balance);\n}","map":{"version":3,"names":["ethers","CONTRACT_ADDRESS","CONTRACT_ABI","connectWallet","window","ethereum","Error","request","method","provider","BrowserProvider","signer","getSigner","getContract","signerOrProvider","Contract","placeBet","nickname","amount","contract","tx","value","parseEther","cashout","profit","resetBet","getLeaderboard","leaderboard","map","player","addr","totalWinnings","formatEther","getContractBalance","balance"],"sources":["/Users/kokesh/snakes Somnia/src/utils/contract.ts"],"sourcesContent":["import { ethers } from 'ethers';\n\n// TODO: замените на реальный адрес после деплоя\nexport const CONTRACT_ADDRESS = '0x0737c42003b43765ba2a802d4e3C5Ee961D2d865';\nexport const CONTRACT_ABI = [\n\t{\n\t\t\"inputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"constructor\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"player\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"nickname\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"BetPlaced\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"player\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"BetReset\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"player\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"profit\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"CashedOut\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Withdrawn\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"bets\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"player\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"nickname\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"active\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"profit\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"cashout\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"newNickname\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"changeNickname\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"getContractBalance\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"getLeaderboard\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"components\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\t\"name\": \"addr\",\n\t\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\t\t\"name\": \"nickname\",\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"totalWinnings\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"internalType\": \"struct SnakesGame.Player[]\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"tuple[]\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"leaderboard\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"addr\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"nickname\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"totalWinnings\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"nicknames\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"owner\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"nickname\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"placeBet\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"payable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"resetBet\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"newOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transferOwnership\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"withdraw\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t}\n];\n\ndeclare global {\n  interface Window {\n    ethereum?: any;\n  }\n}\n\nexport async function connectWallet() {\n  if (!window.ethereum) throw new Error('MetaMask not found');\n  await window.ethereum.request({ method: 'eth_requestAccounts' });\n  const provider = new ethers.BrowserProvider(window.ethereum);\n  const signer = await provider.getSigner();\n  return { provider, signer };\n}\n\nexport function getContract(signerOrProvider: any) {\n  return new ethers.Contract(CONTRACT_ADDRESS, CONTRACT_ABI, signerOrProvider);\n}\n\nexport async function placeBet(signer: any, nickname: string, amount: string) {\n  const contract = getContract(signer);\n  const tx = await contract.placeBet(nickname, { value: ethers.parseEther(amount) });\n  return tx;\n}\n\nexport async function cashout(signer: any, profit: string) {\n  const contract = getContract(signer);\n  const tx = await contract.cashout(ethers.parseEther(profit));\n  return tx;\n}\n\nexport async function resetBet(signer: any) {\n  const contract = getContract(signer);\n  const tx = await contract.resetBet();\n  return tx;\n}\n\nexport async function getLeaderboard(provider: any) {\n  const contract = getContract(provider);\n  const leaderboard = await contract.getLeaderboard();\n  \n  // Преобразуем данные из контракта в удобный формат\n  return leaderboard.map((player: any) => ({\n    addr: player.addr,\n    nickname: player.nickname,\n    totalWinnings: ethers.formatEther(player.totalWinnings)\n  }));\n}\n\nexport async function getContractBalance(provider: any) {\n  const contract = getContract(provider);\n  const balance = await contract.getContractBalance();\n  return ethers.formatEther(balance);\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;;AAE/B;AACA,OAAO,MAAMC,gBAAgB,GAAG,4CAA4C;AAC5E,OAAO,MAAMC,YAAY,GAAG,CAC3B;EACC,QAAQ,EAAE,EAAE;EACZ,iBAAiB,EAAE,YAAY;EAC/B,MAAM,EAAE;AACT,CAAC,EACD;EACC,WAAW,EAAE,KAAK;EAClB,QAAQ,EAAE,CACT;IACC,SAAS,EAAE,IAAI;IACf,cAAc,EAAE,SAAS;IACzB,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE;EACT,CAAC,EACD;IACC,SAAS,EAAE,KAAK;IAChB,cAAc,EAAE,QAAQ;IACxB,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE;EACT,CAAC,EACD;IACC,SAAS,EAAE,KAAK;IAChB,cAAc,EAAE,SAAS;IACzB,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE;EACT,CAAC,CACD;EACD,MAAM,EAAE,WAAW;EACnB,MAAM,EAAE;AACT,CAAC,EACD;EACC,WAAW,EAAE,KAAK;EAClB,QAAQ,EAAE,CACT;IACC,SAAS,EAAE,IAAI;IACf,cAAc,EAAE,SAAS;IACzB,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE;EACT,CAAC,CACD;EACD,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE;AACT,CAAC,EACD;EACC,WAAW,EAAE,KAAK;EAClB,QAAQ,EAAE,CACT;IACC,SAAS,EAAE,IAAI;IACf,cAAc,EAAE,SAAS;IACzB,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE;EACT,CAAC,EACD;IACC,SAAS,EAAE,KAAK;IAChB,cAAc,EAAE,SAAS;IACzB,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE;EACT,CAAC,CACD;EACD,MAAM,EAAE,WAAW;EACnB,MAAM,EAAE;AACT,CAAC,EACD;EACC,WAAW,EAAE,KAAK;EAClB,QAAQ,EAAE,CACT;IACC,SAAS,EAAE,IAAI;IACf,cAAc,EAAE,SAAS;IACzB,MAAM,EAAE,OAAO;IACf,MAAM,EAAE;EACT,CAAC,EACD;IACC,SAAS,EAAE,KAAK;IAChB,cAAc,EAAE,SAAS;IACzB,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE;EACT,CAAC,CACD;EACD,MAAM,EAAE,WAAW;EACnB,MAAM,EAAE;AACT,CAAC,EACD;EACC,QAAQ,EAAE,CACT;IACC,cAAc,EAAE,SAAS;IACzB,MAAM,EAAE,EAAE;IACV,MAAM,EAAE;EACT,CAAC,CACD;EACD,MAAM,EAAE,MAAM;EACd,SAAS,EAAE,CACV;IACC,cAAc,EAAE,SAAS;IACzB,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE;EACT,CAAC,EACD;IACC,cAAc,EAAE,SAAS;IACzB,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE;EACT,CAAC,EACD;IACC,cAAc,EAAE,QAAQ;IACxB,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE;EACT,CAAC,EACD;IACC,cAAc,EAAE,MAAM;IACtB,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE;EACT,CAAC,CACD;EACD,iBAAiB,EAAE,MAAM;EACzB,MAAM,EAAE;AACT,CAAC,EACD;EACC,QAAQ,EAAE,CACT;IACC,cAAc,EAAE,SAAS;IACzB,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE;EACT,CAAC,CACD;EACD,MAAM,EAAE,SAAS;EACjB,SAAS,EAAE,EAAE;EACb,iBAAiB,EAAE,YAAY;EAC/B,MAAM,EAAE;AACT,CAAC,EACD;EACC,QAAQ,EAAE,CACT;IACC,cAAc,EAAE,QAAQ;IACxB,MAAM,EAAE,aAAa;IACrB,MAAM,EAAE;EACT,CAAC,CACD;EACD,MAAM,EAAE,gBAAgB;EACxB,SAAS,EAAE,EAAE;EACb,iBAAiB,EAAE,YAAY;EAC/B,MAAM,EAAE;AACT,CAAC,EACD;EACC,QAAQ,EAAE,EAAE;EACZ,MAAM,EAAE,oBAAoB;EAC5B,SAAS,EAAE,CACV;IACC,cAAc,EAAE,SAAS;IACzB,MAAM,EAAE,EAAE;IACV,MAAM,EAAE;EACT,CAAC,CACD;EACD,iBAAiB,EAAE,MAAM;EACzB,MAAM,EAAE;AACT,CAAC,EACD;EACC,QAAQ,EAAE,EAAE;EACZ,MAAM,EAAE,gBAAgB;EACxB,SAAS,EAAE,CACV;IACC,YAAY,EAAE,CACb;MACC,cAAc,EAAE,SAAS;MACzB,MAAM,EAAE,MAAM;MACd,MAAM,EAAE;IACT,CAAC,EACD;MACC,cAAc,EAAE,QAAQ;MACxB,MAAM,EAAE,UAAU;MAClB,MAAM,EAAE;IACT,CAAC,EACD;MACC,cAAc,EAAE,SAAS;MACzB,MAAM,EAAE,eAAe;MACvB,MAAM,EAAE;IACT,CAAC,CACD;IACD,cAAc,EAAE,4BAA4B;IAC5C,MAAM,EAAE,EAAE;IACV,MAAM,EAAE;EACT,CAAC,CACD;EACD,iBAAiB,EAAE,MAAM;EACzB,MAAM,EAAE;AACT,CAAC,EACD;EACC,QAAQ,EAAE,CACT;IACC,cAAc,EAAE,SAAS;IACzB,MAAM,EAAE,EAAE;IACV,MAAM,EAAE;EACT,CAAC,CACD;EACD,MAAM,EAAE,aAAa;EACrB,SAAS,EAAE,CACV;IACC,cAAc,EAAE,SAAS;IACzB,MAAM,EAAE,MAAM;IACd,MAAM,EAAE;EACT,CAAC,EACD;IACC,cAAc,EAAE,QAAQ;IACxB,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE;EACT,CAAC,EACD;IACC,cAAc,EAAE,SAAS;IACzB,MAAM,EAAE,eAAe;IACvB,MAAM,EAAE;EACT,CAAC,CACD;EACD,iBAAiB,EAAE,MAAM;EACzB,MAAM,EAAE;AACT,CAAC,EACD;EACC,QAAQ,EAAE,CACT;IACC,cAAc,EAAE,SAAS;IACzB,MAAM,EAAE,EAAE;IACV,MAAM,EAAE;EACT,CAAC,CACD;EACD,MAAM,EAAE,WAAW;EACnB,SAAS,EAAE,CACV;IACC,cAAc,EAAE,QAAQ;IACxB,MAAM,EAAE,EAAE;IACV,MAAM,EAAE;EACT,CAAC,CACD;EACD,iBAAiB,EAAE,MAAM;EACzB,MAAM,EAAE;AACT,CAAC,EACD;EACC,QAAQ,EAAE,EAAE;EACZ,MAAM,EAAE,OAAO;EACf,SAAS,EAAE,CACV;IACC,cAAc,EAAE,SAAS;IACzB,MAAM,EAAE,EAAE;IACV,MAAM,EAAE;EACT,CAAC,CACD;EACD,iBAAiB,EAAE,MAAM;EACzB,MAAM,EAAE;AACT,CAAC,EACD;EACC,QAAQ,EAAE,CACT;IACC,cAAc,EAAE,QAAQ;IACxB,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE;EACT,CAAC,CACD;EACD,MAAM,EAAE,UAAU;EAClB,SAAS,EAAE,EAAE;EACb,iBAAiB,EAAE,SAAS;EAC5B,MAAM,EAAE;AACT,CAAC,EACD;EACC,QAAQ,EAAE,EAAE;EACZ,MAAM,EAAE,UAAU;EAClB,SAAS,EAAE,EAAE;EACb,iBAAiB,EAAE,YAAY;EAC/B,MAAM,EAAE;AACT,CAAC,EACD;EACC,QAAQ,EAAE,CACT;IACC,cAAc,EAAE,SAAS;IACzB,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE;EACT,CAAC,CACD;EACD,MAAM,EAAE,mBAAmB;EAC3B,SAAS,EAAE,EAAE;EACb,iBAAiB,EAAE,YAAY;EAC/B,MAAM,EAAE;AACT,CAAC,EACD;EACC,QAAQ,EAAE,CACT;IACC,cAAc,EAAE,SAAS;IACzB,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE;EACT,CAAC,CACD;EACD,MAAM,EAAE,UAAU;EAClB,SAAS,EAAE,EAAE;EACb,iBAAiB,EAAE,YAAY;EAC/B,MAAM,EAAE;AACT,CAAC,CACD;AAQD,OAAO,eAAeC,aAAaA,CAAA,EAAG;EACpC,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;EAC3D,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;IAAEC,MAAM,EAAE;EAAsB,CAAC,CAAC;EAChE,MAAMC,QAAQ,GAAG,IAAIT,MAAM,CAACU,eAAe,CAACN,MAAM,CAACC,QAAQ,CAAC;EAC5D,MAAMM,MAAM,GAAG,MAAMF,QAAQ,CAACG,SAAS,CAAC,CAAC;EACzC,OAAO;IAAEH,QAAQ;IAAEE;EAAO,CAAC;AAC7B;AAEA,OAAO,SAASE,WAAWA,CAACC,gBAAqB,EAAE;EACjD,OAAO,IAAId,MAAM,CAACe,QAAQ,CAACd,gBAAgB,EAAEC,YAAY,EAAEY,gBAAgB,CAAC;AAC9E;AAEA,OAAO,eAAeE,QAAQA,CAACL,MAAW,EAAEM,QAAgB,EAAEC,MAAc,EAAE;EAC5E,MAAMC,QAAQ,GAAGN,WAAW,CAACF,MAAM,CAAC;EACpC,MAAMS,EAAE,GAAG,MAAMD,QAAQ,CAACH,QAAQ,CAACC,QAAQ,EAAE;IAAEI,KAAK,EAAErB,MAAM,CAACsB,UAAU,CAACJ,MAAM;EAAE,CAAC,CAAC;EAClF,OAAOE,EAAE;AACX;AAEA,OAAO,eAAeG,OAAOA,CAACZ,MAAW,EAAEa,MAAc,EAAE;EACzD,MAAML,QAAQ,GAAGN,WAAW,CAACF,MAAM,CAAC;EACpC,MAAMS,EAAE,GAAG,MAAMD,QAAQ,CAACI,OAAO,CAACvB,MAAM,CAACsB,UAAU,CAACE,MAAM,CAAC,CAAC;EAC5D,OAAOJ,EAAE;AACX;AAEA,OAAO,eAAeK,QAAQA,CAACd,MAAW,EAAE;EAC1C,MAAMQ,QAAQ,GAAGN,WAAW,CAACF,MAAM,CAAC;EACpC,MAAMS,EAAE,GAAG,MAAMD,QAAQ,CAACM,QAAQ,CAAC,CAAC;EACpC,OAAOL,EAAE;AACX;AAEA,OAAO,eAAeM,cAAcA,CAACjB,QAAa,EAAE;EAClD,MAAMU,QAAQ,GAAGN,WAAW,CAACJ,QAAQ,CAAC;EACtC,MAAMkB,WAAW,GAAG,MAAMR,QAAQ,CAACO,cAAc,CAAC,CAAC;;EAEnD;EACA,OAAOC,WAAW,CAACC,GAAG,CAAEC,MAAW,KAAM;IACvCC,IAAI,EAAED,MAAM,CAACC,IAAI;IACjBb,QAAQ,EAAEY,MAAM,CAACZ,QAAQ;IACzBc,aAAa,EAAE/B,MAAM,CAACgC,WAAW,CAACH,MAAM,CAACE,aAAa;EACxD,CAAC,CAAC,CAAC;AACL;AAEA,OAAO,eAAeE,kBAAkBA,CAACxB,QAAa,EAAE;EACtD,MAAMU,QAAQ,GAAGN,WAAW,CAACJ,QAAQ,CAAC;EACtC,MAAMyB,OAAO,GAAG,MAAMf,QAAQ,CAACc,kBAAkB,CAAC,CAAC;EACnD,OAAOjC,MAAM,CAACgC,WAAW,CAACE,OAAO,CAAC;AACpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}