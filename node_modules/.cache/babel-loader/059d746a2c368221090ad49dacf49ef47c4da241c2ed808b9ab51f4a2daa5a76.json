{"ast":null,"code":"var _jsxFileName = \"/Users/kokesh/snakes Somnia/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BetPanel from './components/BetPanel.tsx';\nimport GameBoard from './components/GameBoard.tsx';\nimport Leaderboard from './components/Leaderboard.tsx';\nimport { generateBoard, generatePath } from './utils/gameLogic.ts';\nimport { connectWallet, placeBet, cashout } from './utils/contract.ts';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nfunction toFixed18(val) {\n  return Number(val).toFixed(18).replace(/0+$/, '').replace(/\\.$/, '');\n}\nconst getStoredNickname = address => {\n  if (!address) return '';\n  return localStorage.getItem(`nickname_${address}`) || '';\n};\nconst setStoredNickname = (address, nickname) => {\n  if (!address) return;\n  localStorage.setItem(`nickname_${address}`, nickname);\n};\nconst STT_TOKEN_ADDRESS = '<STT_ERC20_TOKEN_ADDRESS>';\nconst STT_TOKEN_ABI = [\"function balanceOf(address owner) view returns (uint256)\", \"function decimals() view returns (uint8)\"];\nconst App = () => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [nickname, setNickname] = useState('');\n  const [bet, setBet] = useState('');\n  const [difficulty, setDifficulty] = useState('easy');\n  const [step, setStep] = useState(0); // сколько бросков\n  const [board, setBoard] = useState(null);\n  const [path, setPath] = useState(null);\n  const [position, setPosition] = useState(0); // индекс в path\n  const [profit, setProfit] = useState(0);\n  const [gameActive, setGameActive] = useState(false);\n  const [lost, setLost] = useState(false);\n  const [rolling, setRolling] = useState(false);\n  const [dice1, setDice1] = useState(null);\n  const [dice2, setDice2] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [txStatus, setTxStatus] = useState(null);\n  const [cashoutPending, setCashoutPending] = useState(false);\n  const [canBet, setCanBet] = useState(true); // Можно ли делать ставку\n  const [editingNickname, setEditingNickname] = useState(false);\n  const [inputNickname, setInputNickname] = useState('');\n  const [accumulatedMult, setAccumulatedMult] = useState(1);\n  const [multHistory, setMultHistory] = useState([]); // история множителей\n  const [balance, setBalance] = useState('');\n\n  // Получение баланса STT\n  const fetchBalance = async (provider, account) => {\n    if (!provider || !account) return;\n    try {\n      const erc20 = new ethers.Contract(STT_TOKEN_ADDRESS, STT_TOKEN_ABI, provider);\n      const raw = await erc20.balanceOf(account);\n      const decimals = await erc20.decimals();\n      setBalance(ethers.formatUnits(raw, decimals));\n    } catch (e) {\n      setBalance('');\n    }\n  };\n\n  // При подключении кошелька — подгружаем никнейм\n  useEffect(() => {\n    if (account && provider) {\n      fetchBalance(provider, account);\n      const stored = getStoredNickname(account);\n      setNickname(stored);\n      setInputNickname(stored);\n      setEditingNickname(!stored); // если нет ника — сразу редактировать\n    }\n  }, [account, provider]);\n\n  // Смена никнейма\n  const handleSaveNickname = () => {\n    setNickname(inputNickname);\n    setStoredNickname(account, inputNickname);\n    setEditingNickname(false);\n    // TODO: здесь можно вызвать функцию смены ника в контракте\n  };\n  const handleConnect = async () => {\n    try {\n      const {\n        provider,\n        signer\n      } = await connectWallet();\n      const address = await signer.getAddress();\n      setSigner(signer);\n      setProvider(provider);\n      setAccount(address);\n      setIsConnected(true);\n      fetchBalance(provider, address);\n    } catch (e) {\n      setTxStatus('Ошибка подключения к MetaMask');\n    }\n  };\n  const handleBet = async ({\n    amount,\n    difficulty\n  }) => {\n    setBet(amount);\n    setDifficulty(difficulty);\n    setTxStatus('Отправка транзакции...');\n    try {\n      await placeBet(signer, nickname, amount); // nickname из useState\n      setTxStatus('Ставка принята!');\n      const b = generateBoard(difficulty);\n      const p = generatePath();\n      setBoard(b);\n      setPath(p);\n      setPosition(0);\n      setStep(0);\n      setProfit(0); // сбрасываем profit при новой ставке\n      setAccumulatedMult(1); // сбрасываем множитель при новой ставке\n      setMultHistory([]); // сбрасываем историю множителей\n      setGameActive(true);\n      setLost(false);\n      setDice1(null);\n      setDice2(null);\n      setMessage(null);\n      setCanBet(false); // После ставки нельзя делать новую, пока не закончится раунд\n    } catch (e) {\n      setTxStatus('Ошибка транзакции');\n    }\n  };\n\n  // Анимация движения по маршруту\n  const animateMove = async (from, move, path, board) => {\n    let lose = false;\n    let msg = '';\n    let finalPos = from;\n    for (let i = 1; i <= move; i++) {\n      const pos = (from + i) % path.length;\n      setPosition(pos);\n      finalPos = pos;\n      console.log(`[ANIMATE] Step: ${i}, Cell:`, path[pos]);\n      await new Promise(res => setTimeout(res, 400));\n    }\n    // Проверяем только конечную клетку\n    const {\n      x,\n      y\n    } = path[finalPos];\n    const cell = board[y][x];\n    let newMultHistory = [...multHistory];\n    if (cell.type === 'mult') {\n      newMultHistory.push(cell.value);\n    }\n    let newAccumulatedMult = 1;\n    // Считаем итоговый множитель по новой механике\n    const multCounts = {};\n    newMultHistory.forEach(val => {\n      multCounts[val] = (multCounts[val] || 0) + 1;\n    });\n    let sumPrir = 0;\n    let count2x = 0;\n    Object.entries(multCounts).forEach(([val, count]) => {\n      const mult = parseFloat(val.replace('x', ''));\n      if (mult === 2) {\n        count2x += count;\n      } else {\n        sumPrir += (mult - 1) * count;\n      }\n    });\n    if (count2x > 0) {\n      newAccumulatedMult = 1 + sumPrir + Math.pow(2, count2x) - 1;\n    } else {\n      newAccumulatedMult = 1 + sumPrir;\n    }\n    let newProfit = 0;\n    if (cell.type === 'snake') {\n      lose = true;\n      msg = 'Вы попали на змею! Ставка проиграна.';\n      setLost(true);\n      setGameActive(false);\n      setProfit(0);\n      setAccumulatedMult(1); // сбрасываем множитель при проигрыше\n      setMultHistory([]); // сбрасываем историю множителей\n      setMessage(msg);\n    } else {\n      setAccumulatedMult(newAccumulatedMult);\n      setMultHistory(newMultHistory);\n      newProfit = Number(bet) * newAccumulatedMult;\n      setProfit(newProfit);\n      setMessage('');\n    }\n    console.log('BET:', bet, 'accumulatedMult:', newAccumulatedMult, 'newProfit:', newProfit, 'profit:', profit, 'multHistory:', newMultHistory);\n    return {\n      lose,\n      newProfit,\n      msg\n    };\n  };\n  const handleRoll = async () => {\n    if (!gameActive || !path || !board || rolling) return;\n    setRolling(true);\n    // Анимация броска двух кубиков\n    let final1 = getRandomInt(1, 6);\n    let final2 = getRandomInt(1, 6);\n    for (let i = 0; i < 10; i++) {\n      setDice1(getRandomInt(1, 6));\n      setDice2(getRandomInt(1, 6));\n      await new Promise(res => setTimeout(res, 60));\n    }\n    setDice1(final1);\n    setDice2(final2);\n    // Суммируем значения кубиков\n    let move = final1 + final2;\n    console.log('ROLL:', {\n      final1,\n      final2,\n      move,\n      position\n    });\n    console.log('Moving from', position, 'by', move, 'steps');\n    console.log('path.length:', path.length, 'position:', position, 'move:', move);\n    const {\n      lose,\n      newProfit,\n      msg\n    } = await animateMove(position, move, path, board);\n    console.log('AFTER ROLL: profit:', profit, 'newProfit:', newProfit);\n    setStep(s => s + 1);\n    setLost(lose);\n    setGameActive(!lose && step + 1 < 5);\n    setMessage(lose ? msg : step + 1 >= 5 ? `Раунд завершён! Ваш выигрыш: ${newProfit.toFixed(4)} STT` : `Выпало: ${final1} + ${final2} = ${move}`);\n    setRolling(false);\n  };\n  const handleCashout = async () => {\n    setGameActive(false);\n    setTxStatus('Выплата...');\n    setCashoutPending(true);\n    try {\n      const roundedProfit = Number(profit).toFixed(3); // <= теперь 3 знака!\n      const tx = await cashout(signer, roundedProfit);\n      setTxStatus('Ожидание подтверждения транзакции...');\n      await tx.wait();\n      setTxStatus('Выплата успешно отправлена!');\n      setMessage(`Вы забрали: ${roundedProfit} STT. Сделайте новую ставку, чтобы продолжить игру.`);\n      setCanBet(true);\n    } catch (e) {\n      setTxStatus('Ошибка выплаты: ' + ((e === null || e === void 0 ? void 0 : e.reason) || (e === null || e === void 0 ? void 0 : e.message) || ''));\n    } finally {\n      setCashoutPending(false);\n    }\n  };\n  const handleRestart = () => {\n    setBoard(null);\n    setPath(null);\n    setPosition(0);\n    setStep(0);\n    setProfit(0); // сбрасываем profit при рестарте\n    setAccumulatedMult(1); // сбрасываем множитель при рестарте\n    setMultHistory([]); // сбрасываем историю множителей\n    setGameActive(false);\n    setLost(false);\n    setDice1(null);\n    setDice2(null);\n    setMessage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-[#1a232b] flex flex-col items-center justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-5xl p-8 flex flex-row items-start gap-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center w-full max-w-xs\",\n        children: [editingNickname ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 flex gap-2 items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"px-3 py-2 rounded bg-[#1a232b] text-white\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0438\\u043A\\u043D\\u0435\\u0439\\u043C\",\n            value: inputNickname,\n            onChange: e => setInputNickname(e.target.value),\n            maxLength: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded\",\n            onClick: handleSaveNickname,\n            disabled: !inputNickname,\n            children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 flex gap-2 items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-white font-bold\",\n            children: nickname || 'Без ника'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-blue-600 hover:bg-blue-700 text-white text-xs py-1 px-3 rounded\",\n            onClick: () => setEditingNickname(true),\n            children: \"\\u0421\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043D\\u0438\\u043A\\u043D\\u0435\\u0439\\u043C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BetPanel, {\n          onConnect: handleConnect,\n          onBet: handleBet,\n          isConnected: isConnected,\n          balance: balance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center flex-1\",\n        children: [account && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 text-xs text-gray-400\",\n          children: [account.slice(0, 5), \"...\", account.slice(-5)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 text-2xl font-bold text-yellow-300\",\n          children: [\"Current Multiplier: \", accumulatedMult.toFixed(2), \"x\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), !board ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-4 gap-4 bg-[#232e38] p-10 rounded-2xl\",\n            children: Array.from({\n              length: 16\n            }).map((_, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-20 h-20 flex items-center justify-center rounded-xl text-white font-bold text-2xl bg-[#1a232b] opacity-30 border-none\"\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(GameBoard, {\n            step: step,\n            board: board,\n            path: path,\n            position: position,\n            lost: lost,\n            dice1: dice1,\n            dice2: dice2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), gameActive && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-4 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-6 rounded text-lg\",\n              onClick: handleRoll,\n              disabled: step >= 5 || lost || rolling,\n              children: rolling ? 'Rolling...' : 'Roll'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-6 rounded text-lg\",\n              onClick: handleCashout,\n              disabled: step === 0 || lost || rolling || cashoutPending || canBet,\n              children: \"Cashout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), txStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 text-sm text-yellow-300\",\n          children: txStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 24\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mt-6 text-lg font-bold ${lost ? 'text-red-400' : 'text-green-300'}`,\n          children:\n          // Ограничиваем до 3 знаков после точки для выплат и множителя\n          message.replace(/(\\d+\\.\\d{3})\\d*/g, '$1')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), !gameActive && (step > 0 || lost) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mt-8 bg-gray-700 hover:bg-gray-600 text-white font-bold py-2 px-6 rounded text-lg\",\n          onClick: handleRestart,\n          children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-16 flex justify-center w-full\",\n      children: /*#__PURE__*/_jsxDEV(Leaderboard, {\n        provider: provider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"jLwIUHpeEasBJvr8606eBu0hTxI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BetPanel","GameBoard","Leaderboard","generateBoard","generatePath","connectWallet","placeBet","cashout","ethers","jsxDEV","_jsxDEV","Fragment","_Fragment","getRandomInt","min","max","Math","floor","random","toFixed18","val","Number","toFixed","replace","getStoredNickname","address","localStorage","getItem","setStoredNickname","nickname","setItem","STT_TOKEN_ADDRESS","STT_TOKEN_ABI","App","_s","isConnected","setIsConnected","setNickname","bet","setBet","difficulty","setDifficulty","step","setStep","board","setBoard","path","setPath","position","setPosition","profit","setProfit","gameActive","setGameActive","lost","setLost","rolling","setRolling","dice1","setDice1","dice2","setDice2","message","setMessage","account","setAccount","signer","setSigner","provider","setProvider","txStatus","setTxStatus","cashoutPending","setCashoutPending","canBet","setCanBet","editingNickname","setEditingNickname","inputNickname","setInputNickname","accumulatedMult","setAccumulatedMult","multHistory","setMultHistory","balance","setBalance","fetchBalance","erc20","Contract","raw","balanceOf","decimals","formatUnits","e","stored","handleSaveNickname","handleConnect","getAddress","handleBet","amount","b","p","animateMove","from","move","lose","msg","finalPos","i","pos","length","console","log","Promise","res","setTimeout","x","y","cell","newMultHistory","type","push","value","newAccumulatedMult","multCounts","forEach","sumPrir","count2x","Object","entries","count","mult","parseFloat","pow","newProfit","handleRoll","final1","final2","s","handleCashout","roundedProfit","tx","wait","reason","handleRestart","className","children","placeholder","onChange","target","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onConnect","onBet","slice","Array","map","_","idx","_c","$RefreshReg$"],"sources":["/Users/kokesh/snakes Somnia/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BetPanel from './components/BetPanel.tsx';\nimport GameBoard from './components/GameBoard.tsx';\nimport Leaderboard from './components/Leaderboard.tsx';\nimport { generateBoard, generatePath, BoardCell } from './utils/gameLogic.ts';\nimport { connectWallet, placeBet, cashout } from './utils/contract.ts';\nimport { ethers } from 'ethers';\n\nfunction getRandomInt(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction toFixed18(val: number | string) {\n  return Number(val).toFixed(18).replace(/0+$/, '').replace(/\\.$/, '');\n}\n\nconst getStoredNickname = (address: string) => {\n  if (!address) return '';\n  return localStorage.getItem(`nickname_${address}`) || '';\n};\nconst setStoredNickname = (address: string, nickname: string) => {\n  if (!address) return;\n  localStorage.setItem(`nickname_${address}`, nickname);\n};\n\nconst STT_TOKEN_ADDRESS = '<STT_ERC20_TOKEN_ADDRESS>';\nconst STT_TOKEN_ABI = [\n  \"function balanceOf(address owner) view returns (uint256)\",\n  \"function decimals() view returns (uint8)\"\n];\n\nconst App = () => {\n  const [isConnected, setIsConnected] = useState(false);\n  const [nickname, setNickname] = useState('');\n  const [bet, setBet] = useState('');\n  const [difficulty, setDifficulty] = useState<'easy'|'medium'|'hard'|'expert'|'master'>('easy');\n  const [step, setStep] = useState(0); // сколько бросков\n  const [board, setBoard] = useState<BoardCell[][] | null>(null);\n  const [path, setPath] = useState<{x:number, y:number}[] | null>(null);\n  const [position, setPosition] = useState(0); // индекс в path\n  const [profit, setProfit] = useState(0);\n  const [gameActive, setGameActive] = useState(false);\n  const [lost, setLost] = useState(false);\n  const [rolling, setRolling] = useState(false);\n  const [dice1, setDice1] = useState<number | null>(null);\n  const [dice2, setDice2] = useState<number | null>(null);\n  const [message, setMessage] = useState<string | null>(null);\n  const [account, setAccount] = useState<string | null>(null);\n  const [signer, setSigner] = useState<any>(null);\n  const [provider, setProvider] = useState<any>(null);\n  const [txStatus, setTxStatus] = useState<string | null>(null);\n  const [cashoutPending, setCashoutPending] = useState(false);\n  const [canBet, setCanBet] = useState(true); // Можно ли делать ставку\n  const [editingNickname, setEditingNickname] = useState(false);\n  const [inputNickname, setInputNickname] = useState('');\n  const [accumulatedMult, setAccumulatedMult] = useState(1);\n  const [multHistory, setMultHistory] = useState<string[]>([]); // история множителей\n  const [balance, setBalance] = useState<string>('');\n\n  // Получение баланса STT\n  const fetchBalance = async (provider: any, account: string) => {\n    if (!provider || !account) return;\n    try {\n      const erc20 = new ethers.Contract(STT_TOKEN_ADDRESS, STT_TOKEN_ABI, provider);\n      const raw = await erc20.balanceOf(account);\n      const decimals = await erc20.decimals();\n      setBalance(ethers.formatUnits(raw, decimals));\n    } catch (e) {\n      setBalance('');\n    }\n  };\n\n  // При подключении кошелька — подгружаем никнейм\n  useEffect(() => {\n    if (account && provider) {\n      fetchBalance(provider, account);\n      const stored = getStoredNickname(account);\n      setNickname(stored);\n      setInputNickname(stored);\n      setEditingNickname(!stored); // если нет ника — сразу редактировать\n    }\n  }, [account, provider]);\n\n  // Смена никнейма\n  const handleSaveNickname = () => {\n    setNickname(inputNickname);\n    setStoredNickname(account, inputNickname);\n    setEditingNickname(false);\n    // TODO: здесь можно вызвать функцию смены ника в контракте\n  };\n\n  const handleConnect = async () => {\n    try {\n      const { provider, signer } = await connectWallet();\n      const address = await signer.getAddress();\n      setSigner(signer);\n      setProvider(provider);\n      setAccount(address);\n      setIsConnected(true);\n      fetchBalance(provider, address);\n    } catch (e) {\n      setTxStatus('Ошибка подключения к MetaMask');\n    }\n  };\n\n  const handleBet = async ({ amount, difficulty }: any) => {\n    setBet(amount);\n    setDifficulty(difficulty);\n    setTxStatus('Отправка транзакции...');\n    try {\n      await placeBet(signer, nickname, amount); // nickname из useState\n      setTxStatus('Ставка принята!');\n      const b = generateBoard(difficulty);\n      const p = generatePath();\n      setBoard(b);\n      setPath(p);\n      setPosition(0);\n      setStep(0);\n      setProfit(0); // сбрасываем profit при новой ставке\n      setAccumulatedMult(1); // сбрасываем множитель при новой ставке\n      setMultHistory([]); // сбрасываем историю множителей\n      setGameActive(true);\n      setLost(false);\n      setDice1(null);\n      setDice2(null);\n      setMessage(null);\n      setCanBet(false); // После ставки нельзя делать новую, пока не закончится раунд\n    } catch (e) {\n      setTxStatus('Ошибка транзакции');\n    }\n  };\n\n  // Анимация движения по маршруту\n  const animateMove = async (from: number, move: number, path: {x:number, y:number}[], board: BoardCell[][]) => {\n    let lose = false;\n    let msg = '';\n    let finalPos = from;\n    for (let i = 1; i <= move; i++) {\n      const pos = (from + i) % path.length;\n      setPosition(pos);\n      finalPos = pos;\n      console.log(`[ANIMATE] Step: ${i}, Cell:`, path[pos]);\n      await new Promise(res => setTimeout(res, 400));\n    }\n    // Проверяем только конечную клетку\n    const { x, y } = path[finalPos];\n    const cell = board[y][x];\n    let newMultHistory = [...multHistory];\n    if (cell.type === 'mult') {\n      newMultHistory.push(cell.value);\n    }\n    let newAccumulatedMult = 1;\n    // Считаем итоговый множитель по новой механике\n    const multCounts: Record<string, number> = {};\n    newMultHistory.forEach(val => {\n      multCounts[val] = (multCounts[val] || 0) + 1;\n    });\n    let sumPrir = 0;\n    let count2x = 0;\n    Object.entries(multCounts).forEach(([val, count]) => {\n      const mult = parseFloat(val.replace('x', ''));\n      if (mult === 2) {\n        count2x += count;\n      } else {\n        sumPrir += (mult - 1) * count;\n      }\n    });\n    if (count2x > 0) {\n      newAccumulatedMult = (1 + sumPrir) + Math.pow(2, count2x) - 1;\n    } else {\n      newAccumulatedMult = 1 + sumPrir;\n    }\n    let newProfit = 0;\n    if (cell.type === 'snake') {\n      lose = true;\n      msg = 'Вы попали на змею! Ставка проиграна.';\n      setLost(true);\n      setGameActive(false);\n      setProfit(0);\n      setAccumulatedMult(1); // сбрасываем множитель при проигрыше\n      setMultHistory([]); // сбрасываем историю множителей\n      setMessage(msg);\n    } else {\n      setAccumulatedMult(newAccumulatedMult);\n      setMultHistory(newMultHistory);\n      newProfit = Number(bet) * newAccumulatedMult;\n      setProfit(newProfit);\n      setMessage('');\n    }\n    console.log('BET:', bet, 'accumulatedMult:', newAccumulatedMult, 'newProfit:', newProfit, 'profit:', profit, 'multHistory:', newMultHistory);\n    return { lose, newProfit, msg };\n  };\n\n  const handleRoll = async () => {\n    if (!gameActive || !path || !board || rolling) return;\n    setRolling(true);\n    // Анимация броска двух кубиков\n    let final1 = getRandomInt(1, 6);\n    let final2 = getRandomInt(1, 6);\n    for (let i = 0; i < 10; i++) {\n      setDice1(getRandomInt(1, 6));\n      setDice2(getRandomInt(1, 6));\n      await new Promise(res => setTimeout(res, 60));\n    }\n    setDice1(final1);\n    setDice2(final2);\n    // Суммируем значения кубиков\n    let move = final1 + final2;\n    console.log('ROLL:', { final1, final2, move, position });\n    console.log('Moving from', position, 'by', move, 'steps');\n    console.log('path.length:', path.length, 'position:', position, 'move:', move);\n    const { lose, newProfit, msg } = await animateMove(position, move, path, board);\n    console.log('AFTER ROLL: profit:', profit, 'newProfit:', newProfit);\n    setStep(s => s + 1);\n    setLost(lose);\n    setGameActive(!lose && step + 1 < 5);\n    setMessage(lose ? msg : (step + 1 >= 5 ? `Раунд завершён! Ваш выигрыш: ${newProfit.toFixed(4)} STT` : `Выпало: ${final1} + ${final2} = ${move}`));\n    setRolling(false);\n  };\n\n  const handleCashout = async () => {\n    setGameActive(false);\n    setTxStatus('Выплата...');\n    setCashoutPending(true);\n    try {\n      const roundedProfit = Number(profit).toFixed(3); // <= теперь 3 знака!\n      const tx = await cashout(signer, roundedProfit);\n      setTxStatus('Ожидание подтверждения транзакции...');\n      await tx.wait();\n      setTxStatus('Выплата успешно отправлена!');\n      setMessage(`Вы забрали: ${roundedProfit} STT. Сделайте новую ставку, чтобы продолжить игру.`);\n      setCanBet(true);\n    } catch (e: any) {\n      setTxStatus('Ошибка выплаты: ' + (e?.reason || e?.message || ''));\n    } finally {\n      setCashoutPending(false);\n    }\n  };\n\n  const handleRestart = () => {\n    setBoard(null);\n    setPath(null);\n    setPosition(0);\n    setStep(0);\n    setProfit(0); // сбрасываем profit при рестарте\n    setAccumulatedMult(1); // сбрасываем множитель при рестарте\n    setMultHistory([]); // сбрасываем историю множителей\n    setGameActive(false);\n    setLost(false);\n    setDice1(null);\n    setDice2(null);\n    setMessage(null);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-[#1a232b] flex flex-col items-center justify-center\">\n      <div className=\"w-full max-w-5xl p-8 flex flex-row items-start gap-12\">\n        {/* Левая колонка — окно ставок */}\n        <div className=\"flex flex-col items-center w-full max-w-xs\">\n          {editingNickname ? (\n            <div className=\"mb-2 flex gap-2 items-center\">\n              <input\n                className=\"px-3 py-2 rounded bg-[#1a232b] text-white\"\n                placeholder=\"Введите никнейм\"\n                value={inputNickname}\n                onChange={e => setInputNickname(e.target.value)}\n                maxLength={20}\n              />\n              <button\n                className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded\"\n                onClick={handleSaveNickname}\n                disabled={!inputNickname}\n              >\n                Сохранить\n              </button>\n            </div>\n          ) : (\n            <div className=\"mb-2 flex gap-2 items-center\">\n              <span className=\"text-white font-bold\">{nickname || 'Без ника'}</span>\n              <button\n                className=\"bg-blue-600 hover:bg-blue-700 text-white text-xs py-1 px-3 rounded\"\n                onClick={() => setEditingNickname(true)}\n              >\n                Сменить никнейм\n              </button>\n            </div>\n          )}\n          <BetPanel\n            onConnect={handleConnect}\n            onBet={handleBet}\n            isConnected={isConnected}\n            balance={balance}\n          />\n        </div>\n        {/* Правая колонка — игровое поле и всё остальное */}\n        <div className=\"flex flex-col items-center flex-1\">\n          {/* Адрес кошелька */}\n          {account && (\n            <div className=\"mb-2 text-xs text-gray-400\">\n              {account.slice(0, 5)}...{account.slice(-5)}\n            </div>\n          )}\n          {/* Показ текущего множителя */}\n          <div className=\"mb-4 text-2xl font-bold text-yellow-300\">Current Multiplier: {accumulatedMult.toFixed(2)}x</div>\n          {/* Предпросмотр поля, если board не задан */}\n          {!board ? (\n            <div className=\"mb-12\">\n              <div className=\"grid grid-cols-4 gap-4 bg-[#232e38] p-10 rounded-2xl\">\n                {Array.from({ length: 16 }).map((_, idx) => (\n                  <div\n                    key={idx}\n                    className=\"w-20 h-20 flex items-center justify-center rounded-xl text-white font-bold text-2xl bg-[#1a232b] opacity-30 border-none\"\n                  />\n                ))}\n              </div>\n            </div>\n          ) : (\n            <>\n              <GameBoard\n                step={step}\n                board={board}\n                path={path}\n                position={position}\n                lost={lost}\n                dice1={dice1}\n                dice2={dice2}\n              />\n              {gameActive && (\n                <div className=\"flex gap-4 mt-6\">\n                  <button\n                    className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-6 rounded text-lg\"\n                    onClick={handleRoll}\n                    disabled={step >= 5 || lost || rolling}\n                  >\n                    {rolling ? 'Rolling...' : 'Roll'}\n                  </button>\n                  <button\n                    className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-6 rounded text-lg\"\n                    onClick={handleCashout}\n                    disabled={step === 0 || lost || rolling || cashoutPending || canBet}\n                  >\n                    Cashout\n                  </button>\n                </div>\n              )}\n            </>\n          )}\n          {txStatus && <div className=\"mb-2 text-sm text-yellow-300\">{txStatus}</div>}\n          {message && (\n            <div className={`mt-6 text-lg font-bold ${lost ? 'text-red-400' : 'text-green-300'}`}>{\n              // Ограничиваем до 3 знаков после точки для выплат и множителя\n              message.replace(/(\\d+\\.\\d{3})\\d*/g, '$1')\n            }</div>\n          )}\n          {!gameActive && (step > 0 || lost) && (\n            <button\n              className=\"mt-8 bg-gray-700 hover:bg-gray-600 text-white font-bold py-2 px-6 rounded text-lg\"\n              onClick={handleRestart}\n            >\n              Начать заново\n            </button>\n          )}\n        </div>\n      </div>\n      {/* Лидерборд по центру под всей центральной частью */}\n      <div className=\"mt-16 flex justify-center w-full\">\n        <Leaderboard provider={provider} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}