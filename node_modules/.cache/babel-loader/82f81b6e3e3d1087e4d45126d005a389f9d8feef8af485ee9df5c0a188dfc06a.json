{"ast":null,"code":"var _jsxFileName = \"/Users/kokesh/snakes Somnia/src/components/GameBoard.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BOARD_SIZE = 4;\nconst ProgressDots = ({\n  step\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"flex justify-center gap-2 mt-4\",\n  children: [0, 1, 2, 3, 4].map(i => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `w-3 h-3 rounded-full ${i < step ? 'bg-green-400' : 'bg-gray-500'}`\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = ProgressDots;\nconst GameBoard = ({\n  step = 0,\n  board,\n  path,\n  position = 0,\n  lost,\n  dice1,\n  dice2\n}) => {\n  const cells = board || Array.from({\n    length: BOARD_SIZE\n  }, () => Array(BOARD_SIZE).fill({\n    type: 'empty'\n  }));\n  let playerPos = null;\n  if (path && typeof position === 'number' && position < path.length) {\n    playerPos = path[position];\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-4 gap-4 bg-[#232e38] p-10 rounded-2xl\",\n      children: cells.flat().map((cell, idx) => {\n        const x = idx % BOARD_SIZE;\n        const y = Math.floor(idx / BOARD_SIZE);\n        const isPlayer = playerPos && playerPos.x === x && playerPos.y === y;\n        // –î–ª—è –ø—É—Å—Ç—ã—Ö –∫–ª–µ—Ç–æ–∫ ‚Äî –¥–µ–ª–∞–µ–º –∏—Ö –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–º–∏\n        const isEmpty = cell.type === 'empty';\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-20 h-20 flex items-center justify-center rounded-xl text-white font-bold text-2xl\n                ${isEmpty ? 'bg-transparent border-none opacity-30' : cell.type === 'snake' ? 'bg-red-700' : cell.type === 'mult' ? 'bg-[#2c3947]' : cell.type === 'start' ? 'bg-blue-700' : 'bg-[#1a232b]'}\n                ${isPlayer ? lost ? 'ring-4 ring-red-400' : 'ring-4 ring-green-400' : ''}\n              `,\n          children: isEmpty ? '' : isPlayer ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"flex flex-col items-center\",\n            children: dice1 !== null && dice2 !== null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-2xl\",\n                children: dice1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-2xl\",\n                children: dice2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-2xl\",\n              children: \"\\uD83C\\uDFB2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this) : cell.type === 'snake' ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-3xl\",\n            children: \"\\uD83D\\uDC0D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 43\n          }, this) : cell.type === 'mult' ? cell.value : cell.type === 'start' ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-2xl\",\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 43\n          }, this) : ''\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressDots, {\n      step: step\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c2 = GameBoard;\nexport default GameBoard;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProgressDots\");\n$RefreshReg$(_c2, \"GameBoard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","BOARD_SIZE","ProgressDots","step","className","children","map","i","fileName","_jsxFileName","lineNumber","columnNumber","_c","GameBoard","board","path","position","lost","dice1","dice2","cells","Array","from","length","fill","type","playerPos","flat","cell","idx","x","y","Math","floor","isPlayer","isEmpty","value","_c2","$RefreshReg$"],"sources":["/Users/kokesh/snakes Somnia/src/components/GameBoard.tsx"],"sourcesContent":["import React from 'react';\n\nconst BOARD_SIZE = 4;\n\nconst ProgressDots = ({ step }: { step: number }) => (\n  <div className=\"flex justify-center gap-2 mt-4\">\n    {[0, 1, 2, 3, 4].map(i => (\n      <span\n        key={i}\n        className={`w-3 h-3 rounded-full ${i < step ? 'bg-green-400' : 'bg-gray-500'}`}\n      />\n    ))}\n  </div>\n);\n\ninterface GameBoardProps {\n  step?: number;\n  board?: any[][];\n  path?: { x: number; y: number }[];\n  position?: number;\n  lost?: boolean;\n  dice1?: number | null;\n  dice2?: number | null;\n}\n\nconst GameBoard = ({ step = 0, board, path, position = 0, lost, dice1, dice2 }: GameBoardProps) => {\n  const cells = board || Array.from({ length: BOARD_SIZE }, () => Array(BOARD_SIZE).fill({ type: 'empty' }));\n  let playerPos: { x: number; y: number } | null = null;\n  if (path && typeof position === 'number' && position < path.length) {\n    playerPos = path[position];\n  }\n  return (\n    <div className=\"flex flex-col items-center\">\n      <div className=\"grid grid-cols-4 gap-4 bg-[#232e38] p-10 rounded-2xl\">\n        {cells.flat().map((cell, idx) => {\n          const x = idx % BOARD_SIZE;\n          const y = Math.floor(idx / BOARD_SIZE);\n          const isPlayer = playerPos && playerPos.x === x && playerPos.y === y;\n          // –î–ª—è –ø—É—Å—Ç—ã—Ö –∫–ª–µ—Ç–æ–∫ ‚Äî –¥–µ–ª–∞–µ–º –∏—Ö –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–º–∏\n          const isEmpty = cell.type === 'empty';\n          return (\n            <div\n              key={idx}\n              className={`w-20 h-20 flex items-center justify-center rounded-xl text-white font-bold text-2xl\n                ${isEmpty ? 'bg-transparent border-none opacity-30' :\n                  cell.type === 'snake' ? 'bg-red-700' :\n                  cell.type === 'mult' ? 'bg-[#2c3947]' :\n                  cell.type === 'start' ? 'bg-blue-700' :\n                  'bg-[#1a232b]'}\n                ${isPlayer ? (lost ? 'ring-4 ring-red-400' : 'ring-4 ring-green-400') : ''}\n              `}\n            >\n              {isEmpty ? '' : isPlayer ? (\n                <span className=\"flex flex-col items-center\">\n                  {dice1 !== null && dice2 !== null ? (\n                    <>\n                      <span className=\"text-2xl\">{dice1}</span>\n                      <span className=\"text-2xl\">{dice2}</span>\n                    </>\n                  ) : (\n                    <span className=\"text-2xl\">üé≤</span>\n                  )}\n                </span>\n              ) : cell.type === 'snake' ? <span className=\"text-3xl\">üêç</span>\n                : cell.type === 'mult' ? cell.value\n                : cell.type === 'start' ? <span className=\"text-2xl\">Start</span>\n                : ''}\n            </div>\n          );\n        })}\n      </div>\n      <ProgressDots step={step} />\n    </div>\n  );\n};\n\nexport default GameBoard;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,UAAU,GAAG,CAAC;AAEpB,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAuB,CAAC,kBAC9CL,OAAA;EAAKM,SAAS,EAAC,gCAAgC;EAAAC,QAAA,EAC5C,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAACC,CAAC,iBACpBT,OAAA;IAEEM,SAAS,EAAE,wBAAwBG,CAAC,GAAGJ,IAAI,GAAG,cAAc,GAAG,aAAa;EAAG,GAD1EI,CAAC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEP,CACF;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACC,CACN;AAACC,EAAA,GATIV,YAAY;AAqBlB,MAAMW,SAAS,GAAGA,CAAC;EAAEV,IAAI,GAAG,CAAC;EAAEW,KAAK;EAAEC,IAAI;EAAEC,QAAQ,GAAG,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAsB,CAAC,KAAK;EACjG,MAAMC,KAAK,GAAGN,KAAK,IAAIO,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEtB;EAAW,CAAC,EAAE,MAAMoB,KAAK,CAACpB,UAAU,CAAC,CAACuB,IAAI,CAAC;IAAEC,IAAI,EAAE;EAAQ,CAAC,CAAC,CAAC;EAC1G,IAAIC,SAA0C,GAAG,IAAI;EACrD,IAAIX,IAAI,IAAI,OAAOC,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,GAAGD,IAAI,CAACQ,MAAM,EAAE;IAClEG,SAAS,GAAGX,IAAI,CAACC,QAAQ,CAAC;EAC5B;EACA,oBACElB,OAAA;IAAKM,SAAS,EAAC,4BAA4B;IAAAC,QAAA,gBACzCP,OAAA;MAAKM,SAAS,EAAC,sDAAsD;MAAAC,QAAA,EAClEe,KAAK,CAACO,IAAI,CAAC,CAAC,CAACrB,GAAG,CAAC,CAACsB,IAAI,EAAEC,GAAG,KAAK;QAC/B,MAAMC,CAAC,GAAGD,GAAG,GAAG5B,UAAU;QAC1B,MAAM8B,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACJ,GAAG,GAAG5B,UAAU,CAAC;QACtC,MAAMiC,QAAQ,GAAGR,SAAS,IAAIA,SAAS,CAACI,CAAC,KAAKA,CAAC,IAAIJ,SAAS,CAACK,CAAC,KAAKA,CAAC;QACpE;QACA,MAAMI,OAAO,GAAGP,IAAI,CAACH,IAAI,KAAK,OAAO;QACrC,oBACE3B,OAAA;UAEEM,SAAS,EAAE;AACzB,kBAAkB+B,OAAO,GAAG,uCAAuC,GACjDP,IAAI,CAACH,IAAI,KAAK,OAAO,GAAG,YAAY,GACpCG,IAAI,CAACH,IAAI,KAAK,MAAM,GAAG,cAAc,GACrCG,IAAI,CAACH,IAAI,KAAK,OAAO,GAAG,aAAa,GACrC,cAAc;AAChC,kBAAkBS,QAAQ,GAAIjB,IAAI,GAAG,qBAAqB,GAAG,uBAAuB,GAAI,EAAE;AAC1F,eAAgB;UAAAZ,QAAA,EAED8B,OAAO,GAAG,EAAE,GAAGD,QAAQ,gBACtBpC,OAAA;YAAMM,SAAS,EAAC,4BAA4B;YAAAC,QAAA,EACzCa,KAAK,KAAK,IAAI,IAAIC,KAAK,KAAK,IAAI,gBAC/BrB,OAAA,CAAAE,SAAA;cAAAK,QAAA,gBACEP,OAAA;gBAAMM,SAAS,EAAC,UAAU;gBAAAC,QAAA,EAAEa;cAAK;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACzCb,OAAA;gBAAMM,SAAS,EAAC,UAAU;gBAAAC,QAAA,EAAEc;cAAK;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA,eACzC,CAAC,gBAEHb,OAAA;cAAMM,SAAS,EAAC,UAAU;cAAAC,QAAA,EAAC;YAAE;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UACpC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC,GACLiB,IAAI,CAACH,IAAI,KAAK,OAAO,gBAAG3B,OAAA;YAAMM,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAC;UAAE;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,GAC5DiB,IAAI,CAACH,IAAI,KAAK,MAAM,GAAGG,IAAI,CAACQ,KAAK,GACjCR,IAAI,CAACH,IAAI,KAAK,OAAO,gBAAG3B,OAAA;YAAMM,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAC;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,GAC/D;QAAE,GAxBDkB,GAAG;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAyBL,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNb,OAAA,CAACI,YAAY;MAACC,IAAI,EAAEA;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAAC0B,GAAA,GAjDIxB,SAAS;AAmDf,eAAeA,SAAS;AAAC,IAAAD,EAAA,EAAAyB,GAAA;AAAAC,YAAA,CAAA1B,EAAA;AAAA0B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}