{"ast":null,"code":"var _jsxFileName = \"/Users/kokesh/snakes Somnia/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BetPanel from './components/BetPanel.tsx';\nimport GameBoard from './components/GameBoard.tsx';\nimport Leaderboard from './components/Leaderboard.tsx';\nimport { generateBoard, generatePath } from './utils/gameLogic.ts';\nimport { connectWallet, placeBet, cashout, getContractBalance, resetBet, changeNickname } from './utils/contract.ts';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nfunction toFixed18(val) {\n  return Number(val).toFixed(18).replace(/0+$/, '').replace(/\\.$/, '');\n}\nconst getStoredNickname = address => {\n  if (!address) return '';\n  return localStorage.getItem(`nickname_${address}`) || '';\n};\nconst setStoredNickname = (address, nickname) => {\n  if (!address) return;\n  localStorage.setItem(`nickname_${address}`, nickname);\n};\n\n// Очищать состояние после завершения игры (win/lose/cashout/reset)\nconst clearActiveGame = () => {\n  localStorage.removeItem('activeGame');\n};\n\n// Компонент истории игр\nfunction HistoryPanel({\n  history,\n  currentPage,\n  setCurrentPage,\n  totalPages\n}) {\n  if (!history.length) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-8 w-full max-w-xl bg-[#232e38] rounded-xl p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-white font-bold mb-2 text-lg\",\n      children: \"Game History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: history.slice().reverse().map((h, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between text-sm text-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: h.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: h.difficulty.charAt(0).toUpperCase() + h.difficulty.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Bet: \", h.bet]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Mult: \", h.mult]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Profit: \", h.profit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: h.result === 'win' ? 'text-green-400' : 'text-red-400',\n          children: h.result === 'win' ? 'Win' : 'Lose'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center gap-4 mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-3 py-1 rounded bg-gray-700 text-white disabled:opacity-40\",\n        onClick: () => setCurrentPage(p => Math.max(1, p - 1)),\n        disabled: currentPage === 1,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-white\",\n        children: [\"Page \", currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-3 py-1 rounded bg-gray-700 text-white disabled:opacity-40\",\n        onClick: () => setCurrentPage(p => Math.min(totalPages, p + 1)),\n        disabled: currentPage === totalPages,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c = HistoryPanel;\nconst App = () => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [nickname, setNickname] = useState('');\n  const [bet, setBet] = useState('');\n  const [difficulty, setDifficulty] = useState('easy');\n  const [step, setStep] = useState(0); // сколько бросков\n  const [board, setBoard] = useState(null);\n  const [path, setPath] = useState(null);\n  const [position, setPosition] = useState(0); // индекс в path\n  const [profit, setProfit] = useState(0);\n  const [gameActive, setGameActive] = useState(false);\n  const [lost, setLost] = useState(false);\n  const [rolling, setRolling] = useState(false);\n  const [dice1, setDice1] = useState(null);\n  const [dice2, setDice2] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [txStatus, setTxStatus] = useState(null);\n  const [cashoutPending, setCashoutPending] = useState(false);\n  const [canBet, setCanBet] = useState(true); // Можно ли делать ставку\n  const [editingNickname, setEditingNickname] = useState(false);\n  const [inputNickname, setInputNickname] = useState('');\n  const [accumulatedMult, setAccumulatedMult] = useState(1);\n  const [multHistory, setMultHistory] = useState([]); // история множителей\n  const [balance, setBalance] = useState('');\n  const [gameHistory, setGameHistory] = useState(() => {\n    const saved = localStorage.getItem('gameHistory');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [contractBalance, setContractBalance] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const GAMES_PER_PAGE = 10;\n  const totalPages = Math.ceil(gameHistory.length / GAMES_PER_PAGE) || 1;\n  const paginatedHistory = gameHistory.slice((currentPage - 1) * GAMES_PER_PAGE, currentPage * GAMES_PER_PAGE);\n\n  // Инициализация gameHistory из localStorage\n  useEffect(() => {\n    const saved = localStorage.getItem('gameHistory');\n    setGameHistory(saved ? JSON.parse(saved) : []);\n  }, []);\n\n  // Сохранять gameHistory в localStorage при каждом изменении\n  useEffect(() => {\n    localStorage.setItem('gameHistory', JSON.stringify(gameHistory));\n  }, [gameHistory]);\n\n  // Восстановление состояния игры из localStorage при загрузке\n  useEffect(() => {\n    const saved = localStorage.getItem('activeGame');\n    if (saved) {\n      const state = JSON.parse(saved);\n      setBoard(state.board);\n      setPath(state.path);\n      setPosition(state.position);\n      setStep(state.step);\n      setLost(state.lost);\n      setDice1(state.dice1);\n      setDice2(state.dice2);\n      setDifficulty(state.difficulty);\n      setBet(state.bet);\n      setAccumulatedMult(state.accumulatedMult);\n      setMultHistory(state.multHistory);\n      setGameActive(state.gameActive);\n    }\n  }, []);\n\n  // Сохранять состояние активной игры при каждом изменении\n  useEffect(() => {\n    if (gameActive) {\n      localStorage.setItem('activeGame', JSON.stringify({\n        board,\n        path,\n        position,\n        step,\n        lost,\n        dice1,\n        dice2,\n        difficulty,\n        bet,\n        accumulatedMult,\n        multHistory,\n        gameActive\n      }));\n    } else {\n      localStorage.removeItem('activeGame');\n    }\n  }, [board, path, position, step, lost, dice1, dice2, difficulty, bet, accumulatedMult, multHistory, gameActive]);\n\n  // Если после обновления есть активная ставка, но step === 0, сбросить ставку\n  useEffect(() => {\n    const saved = localStorage.getItem('activeGame');\n    if (saved) {\n      const state = JSON.parse(saved);\n      if (state.gameActive && state.step === 0 && signer) {\n        resetBet(signer).finally(() => {\n          localStorage.removeItem('activeGame');\n          setBoard(null);\n          setPath(null);\n          setPosition(0);\n          setStep(0);\n          setLost(false);\n          setDice1(null);\n          setDice2(null);\n          setGameActive(false);\n          setAccumulatedMult(1);\n          setMultHistory([]);\n          setBet('');\n        });\n      }\n    }\n    // eslint-disable-next-line\n  }, [signer]);\n\n  // Получение баланса STT (нативный)\n  const fetchBalance = async (provider, account) => {\n    if (!provider || !account) return;\n    try {\n      const raw = await provider.getBalance(account);\n      setBalance(ethers.formatEther(raw));\n    } catch (e) {\n      setBalance('');\n    }\n  };\n  const fetchContractBalance = async provider => {\n    if (!provider) return;\n    try {\n      const bal = await getContractBalance(provider);\n      setContractBalance(bal);\n    } catch (e) {\n      setContractBalance('');\n    }\n  };\n\n  // При подключении кошелька — подгружаем никнейм\n  useEffect(() => {\n    if (account && provider) {\n      fetchBalance(provider, account);\n      const stored = getStoredNickname(account);\n      setNickname(stored);\n      setInputNickname(stored);\n      setEditingNickname(!stored); // если нет ника — сразу редактировать\n    }\n  }, [account, provider]);\n\n  // Автообновление баланса по таймеру\n  useEffect(() => {\n    if (!account || !provider) return;\n    const interval = setInterval(() => {\n      fetchBalance(provider, account);\n    }, 10000); // обновлять каждые 10 секунд\n    return () => clearInterval(interval);\n  }, [account, provider]);\n  useEffect(() => {\n    if (!provider) return;\n    fetchContractBalance(provider);\n    const interval = setInterval(() => fetchContractBalance(provider), 10000);\n    return () => clearInterval(interval);\n  }, [provider]);\n\n  // Автоматическое восстановление подключения к кошельку при загрузке страницы\n  useEffect(() => {\n    async function checkConnection() {\n      if (window.ethereum) {\n        const accounts = await window.ethereum.request({\n          method: 'eth_accounts'\n        });\n        if (accounts && accounts.length > 0) {\n          const {\n            provider,\n            signer\n          } = await connectWallet();\n          const address = await signer.getAddress();\n          setSigner(signer);\n          setProvider(provider);\n          setAccount(address);\n          setIsConnected(true);\n          fetchBalance(provider, address);\n        }\n      }\n    }\n    checkConnection();\n  }, []);\n\n  // Смена никнейма\n  const handleSaveNickname = async () => {\n    setNickname(inputNickname);\n    setStoredNickname(account, inputNickname);\n    setEditingNickname(false);\n    if (signer && inputNickname) {\n      try {\n        await changeNickname(signer, inputNickname);\n        setTxStatus('Nickname updated on blockchain');\n        // Принудительно обновить лидерборд, если компонент Leaderboard доступен через ref\n        if (typeof window !== 'undefined') {\n          const ev = new CustomEvent('refreshLeaderboard');\n          window.dispatchEvent(ev);\n        }\n      } catch (e) {\n        setTxStatus('Error updating nickname in contract');\n      }\n    }\n  };\n  const handleConnect = async () => {\n    try {\n      const {\n        provider,\n        signer\n      } = await connectWallet();\n      const address = await signer.getAddress();\n      setSigner(signer);\n      setProvider(provider);\n      setAccount(address);\n      setIsConnected(true);\n      fetchBalance(provider, address);\n    } catch (e) {\n      setTxStatus('MetaMask connection error');\n    }\n  };\n  const handleBet = async ({\n    amount,\n    difficulty\n  }) => {\n    setBet(amount);\n    setDifficulty(difficulty);\n    setTxStatus('Sending transaction...');\n    try {\n      await placeBet(signer, nickname, amount); // nickname из useState\n      setTxStatus('Bet placed!');\n      const b = generateBoard(difficulty);\n      const p = generatePath();\n      setBoard(b);\n      setPath(p);\n      setPosition(0);\n      setStep(0);\n      setProfit(0); // сбрасываем profit при новой ставке\n      setAccumulatedMult(1); // сбрасываем множитель при новой ставке\n      setMultHistory([]); // сбрасываем историю множителей\n      setGameActive(true);\n      setLost(false);\n      setDice1(null);\n      setDice2(null);\n      setMessage(null);\n      setCanBet(false); // После ставки нельзя делать новую, пока не закончится раунд\n      fetchBalance(provider, account); // обновить баланс после ставки\n    } catch (e) {\n      setTxStatus('Transaction error');\n    }\n  };\n\n  // Анимация движения по маршруту\n  const animateMove = async (from, move, path, board) => {\n    let lose = false;\n    let msg = '';\n    let finalPos = from;\n    for (let i = 1; i <= move; i++) {\n      const pos = (from + i) % path.length;\n      setPosition(pos);\n      finalPos = pos;\n      console.log(`[ANIMATE] Step: ${i}, Cell:`, path[pos]);\n      await new Promise(res => setTimeout(res, 400));\n    }\n    // Проверяем только конечную клетку\n    const {\n      x,\n      y\n    } = path[finalPos];\n    const cell = board[y][x];\n    let newMultHistory = [...multHistory];\n    if (cell.type === 'mult') {\n      newMultHistory.push(cell.value);\n    }\n    let newAccumulatedMult = 1;\n    // Считаем итоговый множитель по новой механике\n    const multCounts = {};\n    newMultHistory.forEach(val => {\n      multCounts[val] = (multCounts[val] || 0) + 1;\n    });\n    let sumPrir = 0;\n    let count2x = 0;\n    Object.entries(multCounts).forEach(([val, count]) => {\n      const mult = parseFloat(val.replace('x', ''));\n      if (mult === 2) {\n        count2x += count;\n      } else {\n        sumPrir += (mult - 1) * count;\n      }\n    });\n    if (count2x > 0) {\n      newAccumulatedMult = 1 + sumPrir + Math.pow(2, count2x) - 1;\n    } else {\n      newAccumulatedMult = 1 + sumPrir;\n    }\n    let newProfit = 0;\n    if (cell.type === 'snake') {\n      // Воспроизвести звук змеи\n      try {\n        new Audio('/sounds/Snake.mp3').play();\n      } catch {}\n      lose = true;\n      msg = 'You landed on a snake! Bet lost.';\n      setLost(true);\n      setGameActive(false);\n      setProfit(0);\n      setAccumulatedMult(1); // сбрасываем множитель при проигрыше\n      setMultHistory([]); // сбрасываем историю множителей\n      setMessage(msg);\n      clearActiveGame();\n      // Добавить в историю игр проигрыш\n      setGameHistory(h => [...h, {\n        date: new Date().toLocaleString(),\n        bet,\n        difficulty,\n        mult: accumulatedMult.toFixed(2),\n        profit: 0,\n        result: 'lose'\n      }]);\n    } else {\n      setAccumulatedMult(newAccumulatedMult);\n      setMultHistory(newMultHistory);\n      newProfit = Number(bet) * newAccumulatedMult;\n      setProfit(newProfit);\n      setMessage('');\n    }\n    console.log('BET:', bet, 'accumulatedMult:', newAccumulatedMult, 'newProfit:', newProfit, 'profit:', profit, 'multHistory:', newMultHistory);\n    return {\n      lose,\n      newProfit,\n      msg\n    };\n  };\n  const handleRoll = async () => {\n    if (!gameActive || !path || !board || rolling) return;\n    setRolling(true);\n    // Воспроизвести звук броска кубиков\n    try {\n      new Audio('/sounds/Roll.mp3').play();\n    } catch {}\n    // Анимация броска двух кубиков\n    let final1 = getRandomInt(1, 6);\n    let final2 = getRandomInt(1, 6);\n    for (let i = 0; i < 10; i++) {\n      setDice1(getRandomInt(1, 6));\n      setDice2(getRandomInt(1, 6));\n      await new Promise(res => setTimeout(res, 60));\n    }\n    setDice1(final1);\n    setDice2(final2);\n    // Суммируем значения кубиков\n    let move = final1 + final2;\n    console.log('ROLL:', {\n      final1,\n      final2,\n      move,\n      position\n    });\n    console.log('Moving from', position, 'by', move, 'steps');\n    console.log('path.length:', path.length, 'position:', position, 'move:', move);\n    const {\n      lose,\n      newProfit,\n      msg\n    } = await animateMove(position, move, path, board);\n    console.log('AFTER ROLL: profit:', profit, 'newProfit:', newProfit);\n    setStep(s => s + 1);\n    setLost(lose);\n    setGameActive(!lose && step + 1 < 5);\n    setMessage(lose ? msg : step + 1 >= 5 ? `Round finished! Your profit: ${newProfit.toFixed(4)} STT` : `Rolled: ${final1} + ${final2} = ${move}`);\n    setRolling(false);\n  };\n  const handleCashout = async () => {\n    setGameActive(false);\n    setTxStatus('Payout...');\n    setCashoutPending(true);\n    try {\n      const roundedProfit = Number(profit).toFixed(3); // <= теперь 3 знака!\n      const tx = await cashout(signer, roundedProfit);\n      setTxStatus('Waiting for transaction confirmation...');\n      await tx.wait();\n      setTxStatus('Payout sent successfully!');\n      // Воспроизвести звук Cashout\n      try {\n        new Audio('/sounds/Cashout.mp3').play();\n      } catch {}\n      setMessage(`You cashed out: ${roundedProfit} STT. Place a new bet to continue playing.`);\n      setCanBet(true);\n      fetchBalance(provider, account); // обновить баланс после выплаты\n      fetchContractBalance(provider); // обновить баланс контракта\n      clearActiveGame();\n      // Добавить в историю игр\n      setGameHistory(h => [...h, {\n        date: new Date().toLocaleString(),\n        bet,\n        difficulty,\n        mult: accumulatedMult.toFixed(2),\n        profit: roundedProfit,\n        result: 'win'\n      }]);\n    } catch (e) {\n      setTxStatus('Payout error: ' + ((e === null || e === void 0 ? void 0 : e.reason) || (e === null || e === void 0 ? void 0 : e.message) || ''));\n    } finally {\n      setCashoutPending(false);\n    }\n  };\n  const handleRestart = () => {\n    setBoard(null);\n    setPath(null);\n    setPosition(0);\n    setStep(0);\n    setProfit(0); // reset profit on restart\n    setAccumulatedMult(1); // reset multiplier on restart\n    setMultHistory([]); // reset multiplier history\n    setGameActive(false);\n    setLost(false);\n    setDice1(null);\n    setDice2(null);\n    setMessage(null);\n    clearActiveGame();\n  };\n  const handleDisconnect = () => {\n    setIsConnected(false);\n    setAccount(null);\n    setSigner(null);\n    setProvider(null);\n    setBalance('');\n  };\n  const difficulties = ['easy', 'medium', 'hard', 'expert', 'master'];\n  const difficultyLabels = {\n    easy: 'Easy',\n    medium: 'Medium',\n    hard: 'Hard',\n    expert: 'Expert',\n    master: 'Master'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-[#1a232b] flex flex-col items-center justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-5xl p-8 flex flex-row items-start gap-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center w-full max-w-xs\",\n        children: [editingNickname ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 flex gap-2 items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"px-3 py-2 rounded bg-[#1a232b] text-white\",\n            placeholder: \"Enter nickname\",\n            value: inputNickname,\n            onChange: e => setInputNickname(e.target.value),\n            maxLength: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded\",\n            onClick: handleSaveNickname,\n            disabled: !inputNickname,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 flex gap-2 items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-white font-bold\",\n            children: nickname || 'No nickname'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-blue-600 hover:bg-blue-700 text-white text-xs py-1 px-3 rounded\",\n            onClick: () => setEditingNickname(true),\n            children: \"Change nickname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BetPanel, {\n          onConnect: handleConnect,\n          onBet: handleBet,\n          isConnected: isConnected,\n          balance: balance,\n          onDisconnect: handleDisconnect,\n          difficulty: difficulty,\n          setDifficulty: setDifficulty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center flex-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 text-sm text-blue-300 font-bold\",\n          children: [\"Contract Balance: \", contractBalance ? Number(contractBalance).toFixed(3) : '—', \" STT\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this), account && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 text-xs text-gray-400\",\n          children: [account.slice(0, 5), \"...\", account.slice(-5)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 text-2xl font-bold text-yellow-300\",\n          children: [\"Current Multiplier: \", accumulatedMult.toFixed(2), \"x\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this), !board ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6 text-center text-white font-bold text-lg\",\n            children: [\"Preview: \", difficultyLabels[difficulty]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-center\",\n            children: /*#__PURE__*/_jsxDEV(GameBoard, {\n              board: generateBoard(difficulty),\n              step: 0,\n              position: -1,\n              path: generatePath()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(GameBoard, {\n            step: step,\n            board: board,\n            path: path,\n            position: position,\n            lost: lost,\n            dice1: dice1,\n            dice2: dice2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 15\n          }, this), gameActive && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-4 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-6 rounded text-lg\",\n              onClick: handleRoll,\n              disabled: step >= 5 || lost || rolling,\n              children: rolling ? 'Rolling...' : 'Roll'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-6 rounded text-lg\",\n              onClick: handleCashout,\n              disabled: step === 0 || lost || rolling || cashoutPending || canBet,\n              children: \"Cashout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), txStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 text-sm text-yellow-300\",\n          children: txStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 24\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mt-6 text-lg font-bold ${lost ? 'text-red-400' : 'text-green-300'}`,\n          children:\n          // Ограничиваем до 3 знаков после точки для выплат и множителя\n          message.replace(/(\\d+\\.\\d{3})\\d*/g, '$1')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 13\n        }, this), !gameActive && (step > 0 || lost) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mt-8 bg-gray-700 hover:bg-gray-600 text-white font-bold py-2 px-6 rounded text-lg\",\n          onClick: handleRestart,\n          children: \"Restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(HistoryPanel, {\n        history: paginatedHistory,\n        currentPage: currentPage,\n        setCurrentPage: setCurrentPage,\n        totalPages: totalPages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-16 flex justify-center w-full\",\n        children: /*#__PURE__*/_jsxDEV(Leaderboard, {\n          provider: provider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 470,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"XWZRnPl8FcWZ4jtdaBOFubAjdFw=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"HistoryPanel\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BetPanel","GameBoard","Leaderboard","generateBoard","generatePath","connectWallet","placeBet","cashout","getContractBalance","resetBet","changeNickname","ethers","jsxDEV","_jsxDEV","Fragment","_Fragment","getRandomInt","min","max","Math","floor","random","toFixed18","val","Number","toFixed","replace","getStoredNickname","address","localStorage","getItem","setStoredNickname","nickname","setItem","clearActiveGame","removeItem","HistoryPanel","history","currentPage","setCurrentPage","totalPages","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","reverse","map","h","i","date","difficulty","charAt","toUpperCase","bet","mult","profit","result","onClick","p","disabled","_c","App","_s","isConnected","setIsConnected","setNickname","setBet","setDifficulty","step","setStep","board","setBoard","path","setPath","position","setPosition","setProfit","gameActive","setGameActive","lost","setLost","rolling","setRolling","dice1","setDice1","dice2","setDice2","message","setMessage","account","setAccount","signer","setSigner","provider","setProvider","txStatus","setTxStatus","cashoutPending","setCashoutPending","canBet","setCanBet","editingNickname","setEditingNickname","inputNickname","setInputNickname","accumulatedMult","setAccumulatedMult","multHistory","setMultHistory","balance","setBalance","gameHistory","setGameHistory","saved","JSON","parse","contractBalance","setContractBalance","GAMES_PER_PAGE","ceil","paginatedHistory","stringify","state","finally","fetchBalance","raw","getBalance","formatEther","e","fetchContractBalance","bal","stored","interval","setInterval","clearInterval","checkConnection","window","ethereum","accounts","request","method","getAddress","handleSaveNickname","ev","CustomEvent","dispatchEvent","handleConnect","handleBet","amount","b","animateMove","from","move","lose","msg","finalPos","pos","console","log","Promise","res","setTimeout","x","y","cell","newMultHistory","type","push","value","newAccumulatedMult","multCounts","forEach","sumPrir","count2x","Object","entries","count","parseFloat","pow","newProfit","Audio","play","Date","toLocaleString","handleRoll","final1","final2","s","handleCashout","roundedProfit","tx","wait","reason","handleRestart","handleDisconnect","difficulties","difficultyLabels","easy","medium","hard","expert","master","placeholder","onChange","target","maxLength","onConnect","onBet","onDisconnect","_c2","$RefreshReg$"],"sources":["/Users/kokesh/snakes Somnia/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BetPanel from './components/BetPanel.tsx';\nimport GameBoard from './components/GameBoard.tsx';\nimport Leaderboard from './components/Leaderboard.tsx';\nimport { generateBoard, generatePath, BoardCell } from './utils/gameLogic.ts';\nimport { connectWallet, placeBet, cashout, getContractBalance, resetBet, changeNickname } from './utils/contract.ts';\nimport { ethers } from 'ethers';\n\nfunction getRandomInt(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction toFixed18(val: number | string) {\n  return Number(val).toFixed(18).replace(/0+$/, '').replace(/\\.$/, '');\n}\n\nconst getStoredNickname = (address: string) => {\n  if (!address) return '';\n  return localStorage.getItem(`nickname_${address}`) || '';\n};\nconst setStoredNickname = (address: string, nickname: string) => {\n  if (!address) return;\n  localStorage.setItem(`nickname_${address}`, nickname);\n};\n\n// Очищать состояние после завершения игры (win/lose/cashout/reset)\nconst clearActiveGame = () => {\n  localStorage.removeItem('activeGame');\n};\n\n// Компонент истории игр\nfunction HistoryPanel({ history, currentPage, setCurrentPage, totalPages }) {\n  if (!history.length) return null;\n  return (\n    <div className=\"mt-8 w-full max-w-xl bg-[#232e38] rounded-xl p-4\">\n      <div className=\"text-white font-bold mb-2 text-lg\">Game History</div>\n      <div className=\"space-y-2\">\n        {history.slice().reverse().map((h, i) => (\n          <div key={i} className=\"flex justify-between text-sm text-gray-200\">\n            <span>{h.date}</span>\n            <span>{h.difficulty.charAt(0).toUpperCase() + h.difficulty.slice(1)}</span>\n            <span>Bet: {h.bet}</span>\n            <span>Mult: {h.mult}</span>\n            <span>Profit: {h.profit}</span>\n            <span className={h.result === 'win' ? 'text-green-400' : 'text-red-400'}>{h.result === 'win' ? 'Win' : 'Lose'}</span>\n          </div>\n        ))}\n      </div>\n      {totalPages > 1 && (\n        <div className=\"flex justify-center gap-4 mt-4\">\n          <button\n            className=\"px-3 py-1 rounded bg-gray-700 text-white disabled:opacity-40\"\n            onClick={() => setCurrentPage((p: number) => Math.max(1, p-1))}\n            disabled={currentPage === 1}\n          >Prev</button>\n          <span className=\"text-white\">Page {currentPage} of {totalPages}</span>\n          <button\n            className=\"px-3 py-1 rounded bg-gray-700 text-white disabled:opacity-40\"\n            onClick={() => setCurrentPage((p: number) => Math.min(totalPages, p+1))}\n            disabled={currentPage === totalPages}\n          >Next</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst App = () => {\n  const [isConnected, setIsConnected] = useState(false);\n  const [nickname, setNickname] = useState('');\n  const [bet, setBet] = useState('');\n  const [difficulty, setDifficulty] = useState<'easy'|'medium'|'hard'|'expert'|'master'>('easy');\n  const [step, setStep] = useState(0); // сколько бросков\n  const [board, setBoard] = useState<BoardCell[][] | null>(null);\n  const [path, setPath] = useState<{x:number, y:number}[] | null>(null);\n  const [position, setPosition] = useState(0); // индекс в path\n  const [profit, setProfit] = useState(0);\n  const [gameActive, setGameActive] = useState(false);\n  const [lost, setLost] = useState(false);\n  const [rolling, setRolling] = useState(false);\n  const [dice1, setDice1] = useState<number | null>(null);\n  const [dice2, setDice2] = useState<number | null>(null);\n  const [message, setMessage] = useState<string | null>(null);\n  const [account, setAccount] = useState<string | null>(null);\n  const [signer, setSigner] = useState<any>(null);\n  const [provider, setProvider] = useState<any>(null);\n  const [txStatus, setTxStatus] = useState<string | null>(null);\n  const [cashoutPending, setCashoutPending] = useState(false);\n  const [canBet, setCanBet] = useState(true); // Можно ли делать ставку\n  const [editingNickname, setEditingNickname] = useState(false);\n  const [inputNickname, setInputNickname] = useState('');\n  const [accumulatedMult, setAccumulatedMult] = useState(1);\n  const [multHistory, setMultHistory] = useState<string[]>([]); // история множителей\n  const [balance, setBalance] = useState<string>('');\n  const [gameHistory, setGameHistory] = useState(() => {\n    const saved = localStorage.getItem('gameHistory');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [contractBalance, setContractBalance] = useState<string>('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const GAMES_PER_PAGE = 10;\n  const totalPages = Math.ceil(gameHistory.length / GAMES_PER_PAGE) || 1;\n  const paginatedHistory = gameHistory.slice((currentPage-1)*GAMES_PER_PAGE, currentPage*GAMES_PER_PAGE);\n\n  // Инициализация gameHistory из localStorage\n  useEffect(() => {\n    const saved = localStorage.getItem('gameHistory');\n    setGameHistory(saved ? JSON.parse(saved) : []);\n  }, []);\n\n  // Сохранять gameHistory в localStorage при каждом изменении\n  useEffect(() => {\n    localStorage.setItem('gameHistory', JSON.stringify(gameHistory));\n  }, [gameHistory]);\n\n  // Восстановление состояния игры из localStorage при загрузке\n  useEffect(() => {\n    const saved = localStorage.getItem('activeGame');\n    if (saved) {\n      const state = JSON.parse(saved);\n      setBoard(state.board);\n      setPath(state.path);\n      setPosition(state.position);\n      setStep(state.step);\n      setLost(state.lost);\n      setDice1(state.dice1);\n      setDice2(state.dice2);\n      setDifficulty(state.difficulty);\n      setBet(state.bet);\n      setAccumulatedMult(state.accumulatedMult);\n      setMultHistory(state.multHistory);\n      setGameActive(state.gameActive);\n    }\n  }, []);\n\n  // Сохранять состояние активной игры при каждом изменении\n  useEffect(() => {\n    if (gameActive) {\n      localStorage.setItem('activeGame', JSON.stringify({\n        board, path, position, step, lost, dice1, dice2, difficulty, bet, accumulatedMult, multHistory, gameActive\n      }));\n    } else {\n      localStorage.removeItem('activeGame');\n    }\n  }, [board, path, position, step, lost, dice1, dice2, difficulty, bet, accumulatedMult, multHistory, gameActive]);\n\n  // Если после обновления есть активная ставка, но step === 0, сбросить ставку\n  useEffect(() => {\n    const saved = localStorage.getItem('activeGame');\n    if (saved) {\n      const state = JSON.parse(saved);\n      if (state.gameActive && state.step === 0 && signer) {\n        resetBet(signer).finally(() => {\n          localStorage.removeItem('activeGame');\n          setBoard(null);\n          setPath(null);\n          setPosition(0);\n          setStep(0);\n          setLost(false);\n          setDice1(null);\n          setDice2(null);\n          setGameActive(false);\n          setAccumulatedMult(1);\n          setMultHistory([]);\n          setBet('');\n        });\n      }\n    }\n    // eslint-disable-next-line\n  }, [signer]);\n\n  // Получение баланса STT (нативный)\n  const fetchBalance = async (provider: any, account: string) => {\n    if (!provider || !account) return;\n    try {\n      const raw = await provider.getBalance(account);\n      setBalance(ethers.formatEther(raw));\n    } catch (e) {\n      setBalance('');\n    }\n  };\n\n  const fetchContractBalance = async (provider: any) => {\n    if (!provider) return;\n    try {\n      const bal = await getContractBalance(provider);\n      setContractBalance(bal);\n    } catch (e) {\n      setContractBalance('');\n    }\n  };\n\n  // При подключении кошелька — подгружаем никнейм\n  useEffect(() => {\n    if (account && provider) {\n      fetchBalance(provider, account);\n      const stored = getStoredNickname(account);\n      setNickname(stored);\n      setInputNickname(stored);\n      setEditingNickname(!stored); // если нет ника — сразу редактировать\n    }\n  }, [account, provider]);\n\n  // Автообновление баланса по таймеру\n  useEffect(() => {\n    if (!account || !provider) return;\n    const interval = setInterval(() => {\n      fetchBalance(provider, account);\n    }, 10000); // обновлять каждые 10 секунд\n    return () => clearInterval(interval);\n  }, [account, provider]);\n\n  useEffect(() => {\n    if (!provider) return;\n    fetchContractBalance(provider);\n    const interval = setInterval(() => fetchContractBalance(provider), 10000);\n    return () => clearInterval(interval);\n  }, [provider]);\n\n  // Автоматическое восстановление подключения к кошельку при загрузке страницы\n  useEffect(() => {\n    async function checkConnection() {\n      if (window.ethereum) {\n        const accounts = await window.ethereum.request({ method: 'eth_accounts' });\n        if (accounts && accounts.length > 0) {\n          const { provider, signer } = await connectWallet();\n          const address = await signer.getAddress();\n          setSigner(signer);\n          setProvider(provider);\n          setAccount(address);\n          setIsConnected(true);\n          fetchBalance(provider, address);\n        }\n      }\n    }\n    checkConnection();\n  }, []);\n\n  // Смена никнейма\n  const handleSaveNickname = async () => {\n    setNickname(inputNickname);\n    setStoredNickname(account, inputNickname);\n    setEditingNickname(false);\n    if (signer && inputNickname) {\n      try {\n        await changeNickname(signer, inputNickname);\n        setTxStatus('Nickname updated on blockchain');\n        // Принудительно обновить лидерборд, если компонент Leaderboard доступен через ref\n        if (typeof window !== 'undefined') {\n          const ev = new CustomEvent('refreshLeaderboard');\n          window.dispatchEvent(ev);\n        }\n      } catch (e) {\n        setTxStatus('Error updating nickname in contract');\n      }\n    }\n  };\n\n  const handleConnect = async () => {\n    try {\n      const { provider, signer } = await connectWallet();\n      const address = await signer.getAddress();\n      setSigner(signer);\n      setProvider(provider);\n      setAccount(address);\n      setIsConnected(true);\n      fetchBalance(provider, address);\n    } catch (e) {\n      setTxStatus('MetaMask connection error');\n    }\n  };\n\n  const handleBet = async ({ amount, difficulty }: any) => {\n    setBet(amount);\n    setDifficulty(difficulty);\n    setTxStatus('Sending transaction...');\n    try {\n      await placeBet(signer, nickname, amount); // nickname из useState\n      setTxStatus('Bet placed!');\n      const b = generateBoard(difficulty);\n      const p = generatePath();\n      setBoard(b);\n      setPath(p);\n      setPosition(0);\n      setStep(0);\n      setProfit(0); // сбрасываем profit при новой ставке\n      setAccumulatedMult(1); // сбрасываем множитель при новой ставке\n      setMultHistory([]); // сбрасываем историю множителей\n      setGameActive(true);\n      setLost(false);\n      setDice1(null);\n      setDice2(null);\n      setMessage(null);\n      setCanBet(false); // После ставки нельзя делать новую, пока не закончится раунд\n      fetchBalance(provider, account); // обновить баланс после ставки\n    } catch (e) {\n      setTxStatus('Transaction error');\n    }\n  };\n\n  // Анимация движения по маршруту\n  const animateMove = async (from: number, move: number, path: {x:number, y:number}[], board: BoardCell[][]) => {\n    let lose = false;\n    let msg = '';\n    let finalPos = from;\n    for (let i = 1; i <= move; i++) {\n      const pos = (from + i) % path.length;\n      setPosition(pos);\n      finalPos = pos;\n      console.log(`[ANIMATE] Step: ${i}, Cell:`, path[pos]);\n      await new Promise(res => setTimeout(res, 400));\n    }\n    // Проверяем только конечную клетку\n    const { x, y } = path[finalPos];\n    const cell = board[y][x];\n    let newMultHistory = [...multHistory];\n    if (cell.type === 'mult') {\n      newMultHistory.push(cell.value);\n    }\n    let newAccumulatedMult = 1;\n    // Считаем итоговый множитель по новой механике\n    const multCounts: Record<string, number> = {};\n    newMultHistory.forEach(val => {\n      multCounts[val] = (multCounts[val] || 0) + 1;\n    });\n    let sumPrir = 0;\n    let count2x = 0;\n    Object.entries(multCounts).forEach(([val, count]) => {\n      const mult = parseFloat(val.replace('x', ''));\n      if (mult === 2) {\n        count2x += count;\n      } else {\n        sumPrir += (mult - 1) * count;\n      }\n    });\n    if (count2x > 0) {\n      newAccumulatedMult = (1 + sumPrir) + Math.pow(2, count2x) - 1;\n    } else {\n      newAccumulatedMult = 1 + sumPrir;\n    }\n    let newProfit = 0;\n    if (cell.type === 'snake') {\n      // Воспроизвести звук змеи\n      try { new Audio('/sounds/Snake.mp3').play(); } catch {}\n      lose = true;\n      msg = 'You landed on a snake! Bet lost.';\n      setLost(true);\n      setGameActive(false);\n      setProfit(0);\n      setAccumulatedMult(1); // сбрасываем множитель при проигрыше\n      setMultHistory([]); // сбрасываем историю множителей\n      setMessage(msg);\n      clearActiveGame();\n      // Добавить в историю игр проигрыш\n      setGameHistory(h => [...h, {\n        date: new Date().toLocaleString(),\n        bet,\n        difficulty,\n        mult: accumulatedMult.toFixed(2),\n        profit: 0,\n        result: 'lose',\n      }]);\n    } else {\n      setAccumulatedMult(newAccumulatedMult);\n      setMultHistory(newMultHistory);\n      newProfit = Number(bet) * newAccumulatedMult;\n      setProfit(newProfit);\n      setMessage('');\n    }\n    console.log('BET:', bet, 'accumulatedMult:', newAccumulatedMult, 'newProfit:', newProfit, 'profit:', profit, 'multHistory:', newMultHistory);\n    return { lose, newProfit, msg };\n  };\n\n  const handleRoll = async () => {\n    if (!gameActive || !path || !board || rolling) return;\n    setRolling(true);\n    // Воспроизвести звук броска кубиков\n    try { new Audio('/sounds/Roll.mp3').play(); } catch {}\n    // Анимация броска двух кубиков\n    let final1 = getRandomInt(1, 6);\n    let final2 = getRandomInt(1, 6);\n    for (let i = 0; i < 10; i++) {\n      setDice1(getRandomInt(1, 6));\n      setDice2(getRandomInt(1, 6));\n      await new Promise(res => setTimeout(res, 60));\n    }\n    setDice1(final1);\n    setDice2(final2);\n    // Суммируем значения кубиков\n    let move = final1 + final2;\n    console.log('ROLL:', { final1, final2, move, position });\n    console.log('Moving from', position, 'by', move, 'steps');\n    console.log('path.length:', path.length, 'position:', position, 'move:', move);\n    const { lose, newProfit, msg } = await animateMove(position, move, path, board);\n    console.log('AFTER ROLL: profit:', profit, 'newProfit:', newProfit);\n    setStep(s => s + 1);\n    setLost(lose);\n    setGameActive(!lose && step + 1 < 5);\n    setMessage(lose ? msg : (step + 1 >= 5 ? `Round finished! Your profit: ${newProfit.toFixed(4)} STT` : `Rolled: ${final1} + ${final2} = ${move}`));\n    setRolling(false);\n  };\n\n  const handleCashout = async () => {\n    setGameActive(false);\n    setTxStatus('Payout...');\n    setCashoutPending(true);\n    try {\n      const roundedProfit = Number(profit).toFixed(3); // <= теперь 3 знака!\n      const tx = await cashout(signer, roundedProfit);\n      setTxStatus('Waiting for transaction confirmation...');\n      await tx.wait();\n      setTxStatus('Payout sent successfully!');\n      // Воспроизвести звук Cashout\n      try { new Audio('/sounds/Cashout.mp3').play(); } catch {}\n      setMessage(`You cashed out: ${roundedProfit} STT. Place a new bet to continue playing.`);\n      setCanBet(true);\n      fetchBalance(provider, account); // обновить баланс после выплаты\n      fetchContractBalance(provider); // обновить баланс контракта\n      clearActiveGame();\n      // Добавить в историю игр\n      setGameHistory(h => [...h, {\n        date: new Date().toLocaleString(),\n        bet,\n        difficulty,\n        mult: accumulatedMult.toFixed(2),\n        profit: roundedProfit,\n        result: 'win',\n      }]);\n    } catch (e: any) {\n      setTxStatus('Payout error: ' + (e?.reason || e?.message || ''));\n    } finally {\n      setCashoutPending(false);\n    }\n  };\n\n  const handleRestart = () => {\n    setBoard(null);\n    setPath(null);\n    setPosition(0);\n    setStep(0);\n    setProfit(0); // reset profit on restart\n    setAccumulatedMult(1); // reset multiplier on restart\n    setMultHistory([]); // reset multiplier history\n    setGameActive(false);\n    setLost(false);\n    setDice1(null);\n    setDice2(null);\n    setMessage(null);\n    clearActiveGame();\n  };\n\n  const handleDisconnect = () => {\n    setIsConnected(false);\n    setAccount(null);\n    setSigner(null);\n    setProvider(null);\n    setBalance('');\n  };\n\n  const difficulties: Array<'easy'|'medium'|'hard'|'expert'|'master'> = ['easy','medium','hard','expert','master'];\n  const difficultyLabels: Record<string, string> = {\n    easy: 'Easy',\n    medium: 'Medium',\n    hard: 'Hard',\n    expert: 'Expert',\n    master: 'Master',\n  };\n\n  return (\n    <div className=\"min-h-screen bg-[#1a232b] flex flex-col items-center justify-center\">\n      <div className=\"w-full max-w-5xl p-8 flex flex-row items-start gap-12\">\n        {/* Левая колонка — окно ставок */}\n        <div className=\"flex flex-col items-center w-full max-w-xs\">\n          {editingNickname ? (\n            <div className=\"mb-2 flex gap-2 items-center\">\n              <input\n                className=\"px-3 py-2 rounded bg-[#1a232b] text-white\"\n                placeholder=\"Enter nickname\"\n                value={inputNickname}\n                onChange={e => setInputNickname(e.target.value)}\n                maxLength={20}\n              />\n              <button\n                className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded\"\n                onClick={handleSaveNickname}\n                disabled={!inputNickname}\n              >\n                Save\n              </button>\n            </div>\n          ) : (\n            <div className=\"mb-2 flex gap-2 items-center\">\n              <span className=\"text-white font-bold\">{nickname || 'No nickname'}</span>\n              <button\n                className=\"bg-blue-600 hover:bg-blue-700 text-white text-xs py-1 px-3 rounded\"\n                onClick={() => setEditingNickname(true)}\n              >\n                Change nickname\n              </button>\n            </div>\n          )}\n          <BetPanel\n            onConnect={handleConnect}\n            onBet={handleBet}\n            isConnected={isConnected}\n            balance={balance}\n            onDisconnect={handleDisconnect}\n            difficulty={difficulty}\n            setDifficulty={setDifficulty}\n          />\n        </div>\n        {/* Правая колонка — игровое поле и всё остальное */}\n        <div className=\"flex flex-col items-center flex-1\">\n          {/* Баланс смарт-контракта */}\n          <div className=\"mb-2 text-sm text-blue-300 font-bold\">Contract Balance: {contractBalance ? Number(contractBalance).toFixed(3) : '—'} STT</div>\n          {/* Адрес кошелька */}\n          {account && (\n            <div className=\"mb-2 text-xs text-gray-400\">\n              {account.slice(0, 5)}...{account.slice(-5)}\n            </div>\n          )}\n          {/* Показ текущего множителя */}\n          <div className=\"mb-4 text-2xl font-bold text-yellow-300\">Current Multiplier: {accumulatedMult.toFixed(2)}x</div>\n          {/* Предпросмотр поля, если board не задан */}\n          {!board ? (\n            <div className=\"mb-12\">\n              <div className=\"mb-6 text-center text-white font-bold text-lg\">Preview: {difficultyLabels[difficulty]}</div>\n              <div className=\"flex flex-col items-center\">\n                <GameBoard\n                  board={generateBoard(difficulty)}\n                  step={0}\n                  position={-1}\n                  path={generatePath()}\n                />\n              </div>\n            </div>\n          ) : (\n            <>\n              <GameBoard\n                step={step}\n                board={board}\n                path={path}\n                position={position}\n                lost={lost}\n                dice1={dice1}\n                dice2={dice2}\n              />\n              {gameActive && (\n                <div className=\"flex gap-4 mt-6\">\n                  <button\n                    className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-6 rounded text-lg\"\n                    onClick={handleRoll}\n                    disabled={step >= 5 || lost || rolling}\n                  >\n                    {rolling ? 'Rolling...' : 'Roll'}\n                  </button>\n                  <button\n                    className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-6 rounded text-lg\"\n                    onClick={handleCashout}\n                    disabled={step === 0 || lost || rolling || cashoutPending || canBet}\n                  >\n                    Cashout\n                  </button>\n                </div>\n              )}\n            </>\n          )}\n          {txStatus && <div className=\"mb-2 text-sm text-yellow-300\">{txStatus}</div>}\n          {message && (\n            <div className={`mt-6 text-lg font-bold ${lost ? 'text-red-400' : 'text-green-300'}`}>{\n              // Ограничиваем до 3 знаков после точки для выплат и множителя\n              message.replace(/(\\d+\\.\\d{3})\\d*/g, '$1')\n            }</div>\n          )}\n          {!gameActive && (step > 0 || lost) && (\n            <button\n              className=\"mt-8 bg-gray-700 hover:bg-gray-600 text-white font-bold py-2 px-6 rounded text-lg\"\n              onClick={handleRestart}\n            >\n              Restart\n            </button>\n          )}\n        </div>\n      </div>\n      {/* История игр и лидерборд по центру под всей центральной частью */}\n      <div className=\"w-full flex flex-col items-center\">\n        <HistoryPanel history={paginatedHistory} currentPage={currentPage} setCurrentPage={setCurrentPage} totalPages={totalPages} />\n        <div className=\"mt-16 flex justify-center w-full\">\n          <Leaderboard provider={provider} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}