{"ast":null,"code":"var _jsxFileName = \"/Users/kokesh/snakes Somnia/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BetPanel from './components/BetPanel.tsx';\nimport GameBoard from './components/GameBoard.tsx';\nimport Leaderboard from './components/Leaderboard.tsx';\nimport { generateBoard, generatePath } from './utils/gameLogic.ts';\nimport { connectWallet, placeBet, cashout } from './utils/contract.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nfunction toFixed18(val) {\n  return Number(val).toFixed(18).replace(/0+$/, '').replace(/\\.$/, '');\n}\nconst getStoredNickname = address => {\n  if (!address) return '';\n  return localStorage.getItem(`nickname_${address}`) || '';\n};\nconst setStoredNickname = (address, nickname) => {\n  if (!address) return;\n  localStorage.setItem(`nickname_${address}`, nickname);\n};\nconst App = () => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [nickname, setNickname] = useState('');\n  const [bet, setBet] = useState('');\n  const [difficulty, setDifficulty] = useState('easy');\n  const [step, setStep] = useState(0); // сколько бросков\n  const [board, setBoard] = useState(null);\n  const [path, setPath] = useState(null);\n  const [position, setPosition] = useState(0); // индекс в path\n  const [profit, setProfit] = useState(0);\n  const [gameActive, setGameActive] = useState(false);\n  const [lost, setLost] = useState(false);\n  const [rolling, setRolling] = useState(false);\n  const [dice1, setDice1] = useState(null);\n  const [dice2, setDice2] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [txStatus, setTxStatus] = useState(null);\n  const [cashoutPending, setCashoutPending] = useState(false);\n  const [canBet, setCanBet] = useState(true); // Можно ли делать ставку\n  const [editingNickname, setEditingNickname] = useState(false);\n  const [inputNickname, setInputNickname] = useState('');\n  const [accumulatedMult, setAccumulatedMult] = useState(1);\n\n  // При подключении кошелька — подгружаем никнейм\n  useEffect(() => {\n    if (account) {\n      const stored = getStoredNickname(account);\n      setNickname(stored);\n      setInputNickname(stored);\n      setEditingNickname(!stored); // если нет ника — сразу редактировать\n    }\n  }, [account]);\n\n  // Смена никнейма\n  const handleSaveNickname = () => {\n    setNickname(inputNickname);\n    setStoredNickname(account, inputNickname);\n    setEditingNickname(false);\n    // TODO: здесь можно вызвать функцию смены ника в контракте\n  };\n  const handleConnect = async () => {\n    try {\n      const {\n        provider,\n        signer\n      } = await connectWallet();\n      const address = await signer.getAddress();\n      setSigner(signer);\n      setProvider(provider);\n      setAccount(address);\n      setIsConnected(true);\n    } catch (e) {\n      setTxStatus('Ошибка подключения к MetaMask');\n    }\n  };\n  const handleBet = async ({\n    amount,\n    difficulty\n  }) => {\n    setBet(amount);\n    setDifficulty(difficulty);\n    setTxStatus('Отправка транзакции...');\n    try {\n      await placeBet(signer, nickname, amount); // nickname из useState\n      setTxStatus('Ставка принята!');\n      const b = generateBoard(difficulty);\n      const p = generatePath();\n      setBoard(b);\n      setPath(p);\n      setPosition(0);\n      setStep(0);\n      setProfit(0); // сбрасываем profit при новой ставке\n      setAccumulatedMult(1); // сбрасываем множитель при новой ставке\n      setGameActive(true);\n      setLost(false);\n      setDice1(null);\n      setDice2(null);\n      setMessage(null);\n      setCanBet(false); // После ставки нельзя делать новую, пока не закончится раунд\n    } catch (e) {\n      setTxStatus('Ошибка транзакции');\n    }\n  };\n\n  // Анимация движения по маршруту\n  const animateMove = async (from, move, path, board) => {\n    let lose = false;\n    let msg = '';\n    let finalPos = from;\n    for (let i = 1; i <= move; i++) {\n      const pos = (from + i) % path.length;\n      setPosition(pos);\n      finalPos = pos;\n      console.log(`[ANIMATE] Step: ${i}, Cell:`, path[pos]);\n      await new Promise(res => setTimeout(res, 400));\n    }\n    // Проверяем только конечную клетку\n    const {\n      x,\n      y\n    } = path[finalPos];\n    const cell = board[y][x];\n    let newAccumulatedMult = accumulatedMult;\n    if (cell.type === 'mult') {\n      const mult = parseFloat(cell.value.replace('x', ''));\n      newAccumulatedMult += mult - 1;\n    }\n    let newProfit = 0;\n    if (cell.type === 'snake') {\n      lose = true;\n      msg = 'Вы попали на змею! Ставка проиграна.';\n      setLost(true);\n      setGameActive(false);\n      setProfit(0);\n      setAccumulatedMult(1); // сбрасываем множитель при проигрыше\n      setMessage(msg);\n    } else {\n      setAccumulatedMult(newAccumulatedMult);\n      newProfit = Number(bet) * newAccumulatedMult;\n      setProfit(newProfit);\n      setMessage('');\n    }\n    console.log('BET:', bet, 'accumulatedMult:', newAccumulatedMult, 'newProfit:', newProfit, 'profit:', profit);\n    return {\n      lose,\n      newProfit,\n      msg\n    };\n  };\n  const handleRoll = async () => {\n    if (!gameActive || !path || !board || rolling) return;\n    setRolling(true);\n    // Анимация броска двух кубиков\n    let final1 = getRandomInt(1, 6);\n    let final2 = getRandomInt(1, 6);\n    for (let i = 0; i < 10; i++) {\n      setDice1(getRandomInt(1, 6));\n      setDice2(getRandomInt(1, 6));\n      await new Promise(res => setTimeout(res, 60));\n    }\n    setDice1(final1);\n    setDice2(final2);\n    // Суммируем значения кубиков\n    let move = final1 + final2;\n    console.log('ROLL:', {\n      final1,\n      final2,\n      move,\n      position\n    });\n    console.log('Moving from', position, 'by', move, 'steps');\n    console.log('path.length:', path.length, 'position:', position, 'move:', move);\n    const {\n      lose,\n      newProfit,\n      msg\n    } = await animateMove(position, move, path, board);\n    console.log('AFTER ROLL: profit:', profit, 'newProfit:', newProfit);\n    setStep(s => s + 1);\n    setLost(lose);\n    setGameActive(!lose && step + 1 < 5);\n    setMessage(lose ? msg : step + 1 >= 5 ? `Раунд завершён! Ваш выигрыш: ${newProfit.toFixed(4)} STT` : `Выпало: ${final1} + ${final2} = ${move}`);\n    setRolling(false);\n  };\n  const handleCashout = async () => {\n    setGameActive(false);\n    setTxStatus('Выплата...');\n    setCashoutPending(true);\n    try {\n      const roundedProfit = Number(profit).toFixed(8); // <= исправление!\n      const tx = await cashout(signer, roundedProfit);\n      setTxStatus('Ожидание подтверждения транзакции...');\n      await tx.wait();\n      setTxStatus('Выплата успешно отправлена!');\n      setMessage(`Вы забрали: ${roundedProfit} STT. Сделайте новую ставку, чтобы продолжить игру.`);\n      setCanBet(true);\n    } catch (e) {\n      setTxStatus('Ошибка выплаты: ' + ((e === null || e === void 0 ? void 0 : e.reason) || (e === null || e === void 0 ? void 0 : e.message) || ''));\n    } finally {\n      setCashoutPending(false);\n    }\n  };\n  const handleRestart = () => {\n    setBoard(null);\n    setPath(null);\n    setPosition(0);\n    setStep(0);\n    setProfit(0); // сбрасываем profit при рестарте\n    setAccumulatedMult(1); // сбрасываем множитель при рестарте\n    setGameActive(false);\n    setLost(false);\n    setDice1(null);\n    setDice2(null);\n    setMessage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-[#1a232b] flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-8 w-full max-w-5xl p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-6\",\n        children: [editingNickname ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 flex gap-2 items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"px-3 py-2 rounded bg-[#1a232b] text-white\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0438\\u043A\\u043D\\u0435\\u0439\\u043C\",\n            value: inputNickname,\n            onChange: e => setInputNickname(e.target.value),\n            maxLength: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded\",\n            onClick: handleSaveNickname,\n            disabled: !inputNickname,\n            children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 flex gap-2 items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-white font-bold\",\n            children: nickname || 'Без ника'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-blue-600 hover:bg-blue-700 text-white text-xs py-1 px-3 rounded\",\n            onClick: () => setEditingNickname(true),\n            children: \"\\u0421\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043D\\u0438\\u043A\\u043D\\u0435\\u0439\\u043C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BetPanel, {\n          onConnect: handleConnect,\n          onBet: handleBet,\n          isConnected: isConnected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Leaderboard, {\n          provider: provider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex flex-col items-center justify-center\",\n        children: [account && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 text-xs text-gray-400\",\n          children: account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 23\n        }, this), txStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 text-sm text-yellow-300\",\n          children: txStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(GameBoard, {\n          step: step,\n          board: board,\n          path: path,\n          position: position,\n          lost: lost,\n          dice1: dice1,\n          dice2: dice2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), gameActive && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4 mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-6 rounded\",\n            onClick: handleRoll,\n            disabled: step >= 5 || lost || rolling,\n            children: rolling ? 'Rolling...' : 'Roll'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-6 rounded\",\n            onClick: handleCashout,\n            disabled: step === 0 || lost || rolling || cashoutPending || canBet,\n            children: \"Cashout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mt-4 text-lg font-bold ${lost ? 'text-red-400' : 'text-green-300'}`,\n          children:\n          // Ограничиваем до 3 знаков после точки для выплат и множителя\n          message.replace(/(\\d+\\.\\d{3})\\d*/g, '$1')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), !gameActive && (step > 0 || lost) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mt-6 bg-gray-700 hover:bg-gray-600 text-white font-bold py-2 px-6 rounded\",\n          onClick: handleRestart,\n          children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OC7XWOsOPpGSYG7YtoJbRWDfb/k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BetPanel","GameBoard","Leaderboard","generateBoard","generatePath","connectWallet","placeBet","cashout","jsxDEV","_jsxDEV","getRandomInt","min","max","Math","floor","random","toFixed18","val","Number","toFixed","replace","getStoredNickname","address","localStorage","getItem","setStoredNickname","nickname","setItem","App","_s","isConnected","setIsConnected","setNickname","bet","setBet","difficulty","setDifficulty","step","setStep","board","setBoard","path","setPath","position","setPosition","profit","setProfit","gameActive","setGameActive","lost","setLost","rolling","setRolling","dice1","setDice1","dice2","setDice2","message","setMessage","account","setAccount","signer","setSigner","provider","setProvider","txStatus","setTxStatus","cashoutPending","setCashoutPending","canBet","setCanBet","editingNickname","setEditingNickname","inputNickname","setInputNickname","accumulatedMult","setAccumulatedMult","stored","handleSaveNickname","handleConnect","getAddress","e","handleBet","amount","b","p","animateMove","from","move","lose","msg","finalPos","i","pos","length","console","log","Promise","res","setTimeout","x","y","cell","newAccumulatedMult","type","mult","parseFloat","value","newProfit","handleRoll","final1","final2","s","handleCashout","roundedProfit","tx","wait","reason","handleRestart","className","children","placeholder","onChange","target","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onConnect","onBet","_c","$RefreshReg$"],"sources":["/Users/kokesh/snakes Somnia/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BetPanel from './components/BetPanel.tsx';\nimport GameBoard from './components/GameBoard.tsx';\nimport Leaderboard from './components/Leaderboard.tsx';\nimport { generateBoard, generatePath, BoardCell } from './utils/gameLogic.ts';\nimport { connectWallet, placeBet, cashout } from './utils/contract.ts';\n\nfunction getRandomInt(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction toFixed18(val: number | string) {\n  return Number(val).toFixed(18).replace(/0+$/, '').replace(/\\.$/, '');\n}\n\nconst getStoredNickname = (address: string) => {\n  if (!address) return '';\n  return localStorage.getItem(`nickname_${address}`) || '';\n};\nconst setStoredNickname = (address: string, nickname: string) => {\n  if (!address) return;\n  localStorage.setItem(`nickname_${address}`, nickname);\n};\n\nconst App = () => {\n  const [isConnected, setIsConnected] = useState(false);\n  const [nickname, setNickname] = useState('');\n  const [bet, setBet] = useState('');\n  const [difficulty, setDifficulty] = useState<'easy'|'medium'|'hard'|'expert'|'master'>('easy');\n  const [step, setStep] = useState(0); // сколько бросков\n  const [board, setBoard] = useState<BoardCell[][] | null>(null);\n  const [path, setPath] = useState<{x:number, y:number}[] | null>(null);\n  const [position, setPosition] = useState(0); // индекс в path\n  const [profit, setProfit] = useState(0);\n  const [gameActive, setGameActive] = useState(false);\n  const [lost, setLost] = useState(false);\n  const [rolling, setRolling] = useState(false);\n  const [dice1, setDice1] = useState<number | null>(null);\n  const [dice2, setDice2] = useState<number | null>(null);\n  const [message, setMessage] = useState<string | null>(null);\n  const [account, setAccount] = useState<string | null>(null);\n  const [signer, setSigner] = useState<any>(null);\n  const [provider, setProvider] = useState<any>(null);\n  const [txStatus, setTxStatus] = useState<string | null>(null);\n  const [cashoutPending, setCashoutPending] = useState(false);\n  const [canBet, setCanBet] = useState(true); // Можно ли делать ставку\n  const [editingNickname, setEditingNickname] = useState(false);\n  const [inputNickname, setInputNickname] = useState('');\n  const [accumulatedMult, setAccumulatedMult] = useState(1);\n\n  // При подключении кошелька — подгружаем никнейм\n  useEffect(() => {\n    if (account) {\n      const stored = getStoredNickname(account);\n      setNickname(stored);\n      setInputNickname(stored);\n      setEditingNickname(!stored); // если нет ника — сразу редактировать\n    }\n  }, [account]);\n\n  // Смена никнейма\n  const handleSaveNickname = () => {\n    setNickname(inputNickname);\n    setStoredNickname(account, inputNickname);\n    setEditingNickname(false);\n    // TODO: здесь можно вызвать функцию смены ника в контракте\n  };\n\n  const handleConnect = async () => {\n    try {\n      const { provider, signer } = await connectWallet();\n      const address = await signer.getAddress();\n      setSigner(signer);\n      setProvider(provider);\n      setAccount(address);\n      setIsConnected(true);\n    } catch (e) {\n      setTxStatus('Ошибка подключения к MetaMask');\n    }\n  };\n\n  const handleBet = async ({ amount, difficulty }: any) => {\n    setBet(amount);\n    setDifficulty(difficulty);\n    setTxStatus('Отправка транзакции...');\n    try {\n      await placeBet(signer, nickname, amount); // nickname из useState\n      setTxStatus('Ставка принята!');\n      const b = generateBoard(difficulty);\n      const p = generatePath();\n      setBoard(b);\n      setPath(p);\n      setPosition(0);\n      setStep(0);\n      setProfit(0); // сбрасываем profit при новой ставке\n      setAccumulatedMult(1); // сбрасываем множитель при новой ставке\n      setGameActive(true);\n      setLost(false);\n      setDice1(null);\n      setDice2(null);\n      setMessage(null);\n      setCanBet(false); // После ставки нельзя делать новую, пока не закончится раунд\n    } catch (e) {\n      setTxStatus('Ошибка транзакции');\n    }\n  };\n\n  // Анимация движения по маршруту\n  const animateMove = async (from: number, move: number, path: {x:number, y:number}[], board: BoardCell[][]) => {\n    let lose = false;\n    let msg = '';\n    let finalPos = from;\n    for (let i = 1; i <= move; i++) {\n      const pos = (from + i) % path.length;\n      setPosition(pos);\n      finalPos = pos;\n      console.log(`[ANIMATE] Step: ${i}, Cell:`, path[pos]);\n      await new Promise(res => setTimeout(res, 400));\n    }\n    // Проверяем только конечную клетку\n    const { x, y } = path[finalPos];\n    const cell = board[y][x];\n    let newAccumulatedMult = accumulatedMult;\n    if (cell.type === 'mult') {\n      const mult = parseFloat(cell.value.replace('x', ''));\n      newAccumulatedMult += (mult - 1);\n    }\n    let newProfit = 0;\n    if (cell.type === 'snake') {\n      lose = true;\n      msg = 'Вы попали на змею! Ставка проиграна.';\n      setLost(true);\n      setGameActive(false);\n      setProfit(0);\n      setAccumulatedMult(1); // сбрасываем множитель при проигрыше\n      setMessage(msg);\n    } else {\n      setAccumulatedMult(newAccumulatedMult);\n      newProfit = Number(bet) * newAccumulatedMult;\n      setProfit(newProfit);\n      setMessage('');\n    }\n    console.log('BET:', bet, 'accumulatedMult:', newAccumulatedMult, 'newProfit:', newProfit, 'profit:', profit);\n    return { lose, newProfit, msg };\n  };\n\n  const handleRoll = async () => {\n    if (!gameActive || !path || !board || rolling) return;\n    setRolling(true);\n    // Анимация броска двух кубиков\n    let final1 = getRandomInt(1, 6);\n    let final2 = getRandomInt(1, 6);\n    for (let i = 0; i < 10; i++) {\n      setDice1(getRandomInt(1, 6));\n      setDice2(getRandomInt(1, 6));\n      await new Promise(res => setTimeout(res, 60));\n    }\n    setDice1(final1);\n    setDice2(final2);\n    // Суммируем значения кубиков\n    let move = final1 + final2;\n    console.log('ROLL:', { final1, final2, move, position });\n    console.log('Moving from', position, 'by', move, 'steps');\n    console.log('path.length:', path.length, 'position:', position, 'move:', move);\n    const { lose, newProfit, msg } = await animateMove(position, move, path, board);\n    console.log('AFTER ROLL: profit:', profit, 'newProfit:', newProfit);\n    setStep(s => s + 1);\n    setLost(lose);\n    setGameActive(!lose && step + 1 < 5);\n    setMessage(lose ? msg : (step + 1 >= 5 ? `Раунд завершён! Ваш выигрыш: ${newProfit.toFixed(4)} STT` : `Выпало: ${final1} + ${final2} = ${move}`));\n    setRolling(false);\n  };\n\n  const handleCashout = async () => {\n    setGameActive(false);\n    setTxStatus('Выплата...');\n    setCashoutPending(true);\n    try {\n      const roundedProfit = Number(profit).toFixed(8); // <= исправление!\n      const tx = await cashout(signer, roundedProfit);\n      setTxStatus('Ожидание подтверждения транзакции...');\n      await tx.wait();\n      setTxStatus('Выплата успешно отправлена!');\n      setMessage(`Вы забрали: ${roundedProfit} STT. Сделайте новую ставку, чтобы продолжить игру.`);\n      setCanBet(true);\n    } catch (e: any) {\n      setTxStatus('Ошибка выплаты: ' + (e?.reason || e?.message || ''));\n    } finally {\n      setCashoutPending(false);\n    }\n  };\n\n  const handleRestart = () => {\n    setBoard(null);\n    setPath(null);\n    setPosition(0);\n    setStep(0);\n    setProfit(0); // сбрасываем profit при рестарте\n    setAccumulatedMult(1); // сбрасываем множитель при рестарте\n    setGameActive(false);\n    setLost(false);\n    setDice1(null);\n    setDice2(null);\n    setMessage(null);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-[#1a232b] flex items-center justify-center\">\n      <div className=\"flex gap-8 w-full max-w-5xl p-8\">\n        <div className=\"flex flex-col gap-6\">\n          {/* Никнейм и кнопка смены */}\n          {editingNickname ? (\n            <div className=\"mb-2 flex gap-2 items-center\">\n              <input\n                className=\"px-3 py-2 rounded bg-[#1a232b] text-white\"\n                placeholder=\"Введите никнейм\"\n                value={inputNickname}\n                onChange={e => setInputNickname(e.target.value)}\n                maxLength={20}\n              />\n              <button\n                className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded\"\n                onClick={handleSaveNickname}\n                disabled={!inputNickname}\n              >\n                Сохранить\n              </button>\n            </div>\n          ) : (\n            <div className=\"mb-2 flex gap-2 items-center\">\n              <span className=\"text-white font-bold\">{nickname || 'Без ника'}</span>\n              <button\n                className=\"bg-blue-600 hover:bg-blue-700 text-white text-xs py-1 px-3 rounded\"\n                onClick={() => setEditingNickname(true)}\n              >\n                Сменить никнейм\n              </button>\n            </div>\n          )}\n          <BetPanel\n            onConnect={handleConnect}\n            onBet={handleBet}\n            isConnected={isConnected}\n          />\n          <Leaderboard provider={provider} />\n        </div>\n        <div className=\"flex-1 flex flex-col items-center justify-center\">\n          {account && <div className=\"mb-2 text-xs text-gray-400\">{account}</div>}\n          {txStatus && <div className=\"mb-2 text-sm text-yellow-300\">{txStatus}</div>}\n          <GameBoard\n            step={step}\n            board={board}\n            path={path}\n            position={position}\n            lost={lost}\n            dice1={dice1}\n            dice2={dice2}\n          />\n          {gameActive && (\n            <div className=\"flex gap-4 mt-6\">\n              <button\n                className=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-6 rounded\"\n                onClick={handleRoll}\n                disabled={step >= 5 || lost || rolling}\n              >\n                {rolling ? 'Rolling...' : 'Roll'}\n              </button>\n              <button\n                className=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-6 rounded\"\n                onClick={handleCashout}\n                disabled={step === 0 || lost || rolling || cashoutPending || canBet}\n              >\n                Cashout\n              </button>\n            </div>\n          )}\n          {message && (\n            <div className={`mt-4 text-lg font-bold ${lost ? 'text-red-400' : 'text-green-300'}`}>{\n              // Ограничиваем до 3 знаков после точки для выплат и множителя\n              message.replace(/(\\d+\\.\\d{3})\\d*/g, '$1')\n            }</div>\n          )}\n          {!gameActive && (step > 0 || lost) && (\n            <button\n              className=\"mt-6 bg-gray-700 hover:bg-gray-600 text-white font-bold py-2 px-6 rounded\"\n              onClick={handleRestart}\n            >\n              Начать заново\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}